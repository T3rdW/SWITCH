{"version":3,"names":["RelatedKeyboardsItem","_sfc_main","components","data","switchData","switchImages","canEdit","currentImageIndex","userOpenId","onLoad","options","common_vendor","index","__f__","$on","handleSwitchData","checkUserPermission","id","loadSwitchData","getUserOpenId","onUnload","$off","methods","_this","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","res","wrap","_callee$","_context","prev","next","er","callFunction","name","action","sent","result","t0","stop","handleImageError","$set","Array","isArray","images","filter","img","fileID","_this2","_callee2","_callee2$","_context2","showLoading","title","errCode","showToast","errMsg","icon","hideLoading","finish","getPriceText","price","concat","getForceText","force","toString","toLowerCase","includes","getDistanceText","distance","distanceStr","test","formatTime","time","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","e","getRelatedKeyboards","keyboards","length","join","handleAddImage","_this3","_callee3","tempFilePath","cloudPath","uploadRes","imageInfo","_callee3$","_context3","chooseImage","count","sizeType","sourceType","tempFilePaths","_id","now","uploadFile","filePath","fileName","split","pop","updateSwitchImages","_toConsumableArray2","handleImageLongPress","$refs","imageActionPopup","open","handleViewImage","current","_a","previewImage","urls","map","closeActionSheet","handleReplaceImage","_this4","_callee4","newImages","_callee4$","_context4","handleDeleteImage","_this5","_callee5","_callee5$","_context5","showModal","content","success","confirm","doDeleteImage","_this6","_callee6","_callee6$","_context6","_","_this7","_callee7","_callee7$","_context7","Error","close","_this8","_callee8","loginRes","_callee8$","_context8","login","provider","user_open_id","openid","wx","createPage","MiniProgramPage"],"sources":["switchInfo.vue","cGFnZXMvc3dpdGNoSW5mby9zd2l0Y2hJbmZvLnZ1ZQ"],"sourcesContent":["<template>\n\t<view class=\"container\">\n\t\t<!-- 图片轮播 -->\n\t\t<swiper class=\"swiper\" circular :indicator-dots=\"true\" :autoplay=\"true\" :interval=\"3000\" :duration=\"1000\">\n\t\t\t<!-- 添加图片按钮 -->\n\t\t\t<swiper-item v-if=\"canEdit\" class=\"swiper-item add-image\" @click=\"handleAddImage\">\n\t\t\t\t<view class=\"add-button\">\n\t\t\t\t\t<uni-icons type=\"plusempty\" size=\"32\" color=\"#999\"></uni-icons>\n\t\t\t\t\t<text>添加图片</text>\n\t\t\t\t</view>\n\t\t\t</swiper-item>\n\t\t\t<swiper-item v-for=\"(image, index) in switchImages\" :key=\"index\" class=\"swiper-item\">\n\t\t\t\t<image\n\t\t\t\t\t:src=\"image.fileID || '/static/default_switch.webp'\"\n\t\t\t\t\tmode=\"aspectFit\"\n\t\t\t\t\tclass=\"switch-image\"\n\t\t\t\t\t@error=\"handleImageError(index)\"\n\t\t\t\t\t@longpress=\"handleImageLongPress(index)\"\n\t\t\t\t/>\n\t\t\t</swiper-item>\n\t\t\t<!-- 无图片时显示默认图片 -->\n\t\t\t<swiper-item v-if=\"!switchImages.length && !canEdit\" class=\"swiper-item\">\n\t\t\t\t<image src=\"/static/default_switch.webp\" mode=\"aspectFit\" class=\"switch-image\" />\n\t\t\t</swiper-item>\n\t\t</swiper>\n\n\t\t<!-- 图片操作菜单 -->\n\t\t<uni-popup ref=\"imageActionPopup\" type=\"bottom\">\n\t\t\t<view class=\"action-sheet\">\n\t\t\t\t<view class=\"action-item\" @click=\"handleViewImage\">查看原图</view>\n\t\t\t\t<view class=\"action-item\" @click=\"handleReplaceImage\">更换图片</view>\n\t\t\t\t<view class=\"action-item delete\" @click=\"handleDeleteImage\">删除图片</view>\n\t\t\t\t<view class=\"action-item cancel\" @click=\"closeActionSheet\">取消</view>\n\t\t\t</view>\n\t\t</uni-popup>\n\n\t\t<!-- 轴体信息列表 -->\n\t\t<uni-list class=\"info-list\">\n\t\t\t<!-- 基本信息 -->\n\t\t\t<uni-list-item title=\"轴体名称\" :right-text=\"switchData.switch_name || '暂无'\" />\n\t\t\t<uni-list-item title=\"代工厂\" :right-text=\"switchData.manufacturer || '暂无'\" />\n\t\t\t<uni-list-item title=\"轴体分类\" :right-text=\"switchData.switch_type || '暂无'\" />\n\t\t\t<uni-list-item title=\"上市时间\" :right-text=\"switchData.release_date || '暂无'\" />\n\t\t\t<uni-list-item title=\"价格\" :right-text=\"getPriceText(switchData.price)\" />\n\n\t\t\t<!-- 规格参数 -->\n\t\t\t<uni-list-item title=\"轴心材质\" :right-text=\"switchData.stem_material || '暂无'\" />\n\t\t\t<uni-list-item title=\"上盖材质\" :right-text=\"switchData.top_housing_material || '暂无'\" />\n\t\t\t<uni-list-item title=\"底壳材质\" :right-text=\"switchData.bottom_housing_material || '暂无'\" />\n\t\t\t<uni-list-item title=\"触发压力\" :right-text=\"getForceText(switchData.actuation_force)\" />\n\t\t\t<uni-list-item title=\"触发行程\" :right-text=\"getDistanceText(switchData.actuation_travel)\" />\n\t\t\t<uni-list-item title=\"触底压力\" :right-text=\"getForceText(switchData.bottom_force)\" />\n\t\t\t<uni-list-item title=\"触底行程\" :right-text=\"getDistanceText(switchData.bottom_out_travel)\" />\n\t\t\t<uni-list-item title=\"总行程\" :right-text=\"getDistanceText(switchData.total_travel)\" />\n\t\t\t<uni-list-item title=\"弹簧长度\" :right-text=\"switchData.spring_length || '暂无'\" />\n\t\t\t<uni-list-item title=\"出厂润滑\" :right-text=\"switchData.factory_lube ? '是' : '否'\" />\n\t\t\t<uni-list-item title=\"寿命\" :right-text=\"switchData.lifespan || '暂无'\" />\n\n\t\t\t<!-- 其他信息 -->\n\t\t\t<uni-list-item title=\"更新时间\" :right-text=\"formatTime(switchData.update_time)\" />\n\t\t\t<uni-list-item title=\"数据来源\" :right-text=\"switchData.data_source || '暂无'\" />\n\t\t\t<related-keyboards-item\n\t\t\t\t:keyboards=\"getRelatedKeyboards(switchData.related_keyboards)\"\n\t\t\t/>\n\t\t\t<uni-list-item title=\"停产\" :right-text=\"switchData.discontinued ? '是' : '否'\" />\n\t\t\t<uni-list-item title=\"备注\" :right-text=\"switchData.remark || '暂无'\" />\n\t\t\t<uni-list-item title=\"审核状态\" :right-text=\"switchData.audit_status || '暂无'\" />\n\t\t</uni-list>\n\t</view>\n</template>\n\n<script>\n\timport RelatedKeyboardsItem from '@/components/related-keyboards-item.vue'\n\n\texport default {\n\t\tcomponents: {\n\t\t\tRelatedKeyboardsItem\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tswitchData: {}, // 轴体数据\n\t\t\t\tswitchImages: [], // 轴体图片数组\n\t\t\t\tcanEdit: false, // 是否可以编辑\n\t\t\t\tcurrentImageIndex: -1, // 当前操作的图片索引\n\t\t\t\tuserOpenId: '' // 添加用户 OPENID 存储\n\t\t\t}\n\t\t},\n\n\t\tonLoad(options) {\n\t\t\tconsole.log('页面参数:', options)\n\t\t\t// 监听数据传递事件\n\t\t\tuni.$on('switchData', this.handleSwitchData)\n\t\t\t// 检查用户权限\n\t\t\tthis.checkUserPermission()\n\t\t\tif (options.id) {\n\t\t\t\tthis.loadSwitchData(options.id)\n\t\t\t}\n\t\t\t// 获取用户 OPENID\n\t\t\tthis.getUserOpenId()\n\t\t},\n\n\t\tonUnload() {\n\t\t\t// 页面卸载时移除事件监听\n\t\t\tuni.$off('switchData', this.handleSwitchData)\n\t\t},\n\n\t\tmethods: {\n\t\t\t// 检查用户权限\n\t\t\tasync checkUserPermission() {\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'switchApi',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'checkPermission'\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\t// 设置编辑权限\n\t\t\t\t\tthis.canEdit = res.result.canEdit || false\n\n\t\t\t\t\tconsole.log('用户编辑权限:', this.canEdit)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('检查权限失败:', e)\n\t\t\t\t\tthis.canEdit = false\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 处理图片加载错误\n\t\t\thandleImageError(index) {\n\t\t\t\tconsole.log('图片加载失败:', index)\n\t\t\t\t// 将错误图片替换为默认图片\n\t\t\t\tif (this.switchImages[index]) {\n\t\t\t\t\tthis.$set(this.switchImages[index], 'fileID', '/static/default_switch.webp')\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 处理传递来的轴体数据\n\t\t\thandleSwitchData(data) {\n\t\t\t\tconsole.log('接收到轴体数据:', data)\n\t\t\t\tthis.switchData = data\n\t\t\t\t// 处理图片数组，只保留有效的 fileID\n\t\t\t\tthis.switchImages = Array.isArray(data.images) ? data.images.filter(img => img && img.fileID) : []\n\t\t\t\tconsole.log('处理后的图片数组:', this.switchImages)\n\t\t\t},\n\n\t\t\t// 加载轴体数据\n\t\t\tasync loadSwitchData(id) {\n\t\t\t\ttry {\n\t\t\t\t\tuni.showLoading({\n\t\t\t\t\t\ttitle: '加载中...'\n\t\t\t\t\t})\n\n\t\t\t\t\tconst res = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'switchApi',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'getSwitchById',\n\t\t\t\t\t\t\tid: id\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tconsole.log('获取轴体数据结果:', res)\n\n\t\t\t\t\tif (res.result.errCode === 0) {\n\t\t\t\t\t\tthis.switchData = res.result.data\n\t\t\t\t\t\t// 处理图片数组，只保留有效的 fileID\n\t\t\t\t\t\tthis.switchImages = Array.isArray(this.switchData.images) ?\n\t\t\t\t\t\t\tthis.switchData.images.filter(img => img && img.fileID) : []\n\t\t\t\t\t\tconsole.log('加载后的图片数组:', this.switchImages)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: res.result.errMsg || '加载失败',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('加载轴体数据失败:', e)\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '加载失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t} finally {\n\t\t\t\t\tuni.hideLoading()\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 格式化价格\n\t\t\tgetPriceText(price) {\n\t\t\t\treturn price ? `¥${price}` : '暂无报价'\n\t\t\t},\n\n\t\t\t// 格式化力度\n\t\t\tgetForceText(force) {\n\t\t\t\tif (!force) return '暂无数据'\n\t\t\t\t// 如果已经包含 'gf' 就直接返回，否则添加 'gf'\n\t\t\t\treturn force.toString().toLowerCase().includes('gf') ? force : `${force}gf`\n\t\t\t},\n\n\t\t\t// 格式化距离 mm\n\t\t\tgetDistanceText(distance) {\n\t\t\t\t// 如果值为空，返回暂无数据\n\t\t\t\tif (!distance) return '暂无数据'\n\n\t\t\t\tconst distanceStr = distance.toString().toLowerCase()\n\n\t\t\t\t// 如果已经包含 mm，直接返回\n\t\t\t\tif (distanceStr.includes('mm')) {\n\t\t\t\t\treturn distance\n\t\t\t\t}\n\n\t\t\t\t// 如果不包含数字，直接返回原值\n\t\t\t\tif (!/\\d/.test(distanceStr)) {\n\t\t\t\t\treturn distance\n\t\t\t\t}\n\n\t\t\t\t// 包含数字但不包含 mm，添加 mm\n\t\t\t\treturn `${distance}mm`\n\t\t\t},\n\n\t\t\t// 格式化时间\n\t\t\tformatTime(time) {\n\t\t\t\tif (!time) return '暂无数据'\n\t\t\t\ttry {\n\t\t\t\t\tconst date = new Date(time)\n\t\t\t\t\tconst year = date.getFullYear()\n\t\t\t\t\tconst month = String(date.getMonth() + 1).padStart(2, '0')\n\t\t\t\t\tconst day = String(date.getDate()).padStart(2, '0')\n\t\t\t\t\tconst hours = String(date.getHours()).padStart(2, '0')\n\t\t\t\t\tconst minutes = String(date.getMinutes()).padStart(2, '0')\n\t\t\t\t\tconst seconds = String(date.getSeconds()).padStart(2, '0')\n\t\t\t\t\treturn `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('时间格式化失败:', e)\n\t\t\t\t\treturn time\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 处理相关键盘字段的数据\n\t\t\tgetRelatedKeyboards(keyboards) {\n\t\t\t\tif (!keyboards || !Array.isArray(keyboards) || keyboards.length === 0) {\n\t\t\t\t\treturn '--'\n\t\t\t\t}\n\t\t\t\treturn keyboards.join(', ')\n\t\t\t},\n\n\t\t\t// 处理添加图片\n\t\t\tasync handleAddImage() {\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await uni.chooseImage({\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tsizeType: ['compressed'],\n\t\t\t\t\t\tsourceType: ['album', 'camera']\n\t\t\t\t\t});\n\n\t\t\t\t\tconst tempFilePath = res.tempFilePaths[0];\n\t\t\t\t\tconst cloudPath = `switches/${this.switchData._id}/${Date.now()}.jpg`;\n\n\t\t\t\t\tuni.showLoading({ title: '上传中...' });\n\n\t\t\t\t\t// 上传图片\n\t\t\t\t\tconst uploadRes = await uniCloud.uploadFile({\n\t\t\t\t\t\tfilePath: tempFilePath,\n\t\t\t\t\t\tcloudPath: cloudPath\n\t\t\t\t\t});\n\n\t\t\t\t\t// 更新数据库\n\t\t\t\t\tconst imageInfo = {\n\t\t\t\t\t\tfileID: uploadRes.fileID,\n\t\t\t\t\t\tfileName: cloudPath.split('/').pop()\n\t\t\t\t\t};\n\n\t\t\t\t\tawait this.updateSwitchImages([...this.switchImages, imageInfo]);\n\n\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\tuni.showToast({ title: '添加成功' });\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('添加图片失败:', e);\n\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '添加失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 处理图片长按\n\t\t\thandleImageLongPress(index) {\n\t\t\t\tif (!this.canEdit) return;\n\t\t\t\tthis.currentImageIndex = index;\n\t\t\t\tthis.$refs.imageActionPopup.open();\n\t\t\t},\n\n\t\t\t// 查看原图\n\t\t\thandleViewImage() {\n\t\t\t\tconst current = this.switchImages[this.currentImageIndex]?.fileID;\n\t\t\t\tif (current) {\n\t\t\t\t\tuni.previewImage({\n\t\t\t\t\t\turls: this.switchImages.map(img => img.fileID),\n\t\t\t\t\t\tcurrent\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.closeActionSheet();\n\t\t\t},\n\n\t\t\t// 更换图片\n\t\t\tasync handleReplaceImage() {\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await uni.chooseImage({\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tsizeType: ['compressed']\n\t\t\t\t\t});\n\n\t\t\t\t\tconst tempFilePath = res.tempFilePaths[0];\n\t\t\t\t\tconst cloudPath = `switches/${this.switchData._id}/${Date.now()}.jpg`;\n\n\t\t\t\t\tuni.showLoading({ title: '上传中...' });\n\n\t\t\t\t\tconst uploadRes = await uniCloud.uploadFile({\n\t\t\t\t\t\tfilePath: tempFilePath,\n\t\t\t\t\t\tcloudPath: cloudPath\n\t\t\t\t\t});\n\n\t\t\t\t\tconst newImages = [...this.switchImages];\n\t\t\t\t\tnewImages[this.currentImageIndex] = {\n\t\t\t\t\t\tfileID: uploadRes.fileID,\n\t\t\t\t\t\tfileName: cloudPath.split('/').pop()\n\t\t\t\t\t};\n\n\t\t\t\t\tawait this.updateSwitchImages(newImages);\n\n\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\tuni.showToast({ title: '更新成功' });\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('更换图片失败:', e);\n\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '更新失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.closeActionSheet();\n\t\t\t},\n\n\t\t\t// 删除图片\n\t\t\tasync handleDeleteImage() {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '提示',\n\t\t\t\t\tcontent: '确定要删除这张图片吗？',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tthis.doDeleteImage();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.closeActionSheet();\n\t\t\t},\n\n\t\t\t// 执行删除图片操作\n\t\t\tasync doDeleteImage() {\n\t\t\t\ttry {\n\t\t\t\t\tuni.showLoading({ title: '删除中...' });\n\n\t\t\t\t\tconst newImages = this.switchImages.filter((_, index) => index !== this.currentImageIndex);\n\t\t\t\t\tawait this.updateSwitchImages(newImages);\n\n\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\tuni.showToast({ title: '删除成功' });\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('删除图片失败:', e);\n\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '删除失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 更新轴体图片\n\t\t\tasync updateSwitchImages(newImages) {\n\t\t\t\tconst res = await uniCloud.callFunction({\n\t\t\t\t\tname: 'switchApi',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\taction: 'updateSwitch',\n\t\t\t\t\t\tid: this.switchData._id,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\timages: newImages\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (res.result.errCode === 0) {\n\t\t\t\t\tthis.switchImages = newImages;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(res.result.errMsg);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 关闭操作菜单\n\t\t\tcloseActionSheet() {\n\t\t\t\tthis.$refs.imageActionPopup.close();\n\t\t\t\tthis.currentImageIndex = -1;\n\t\t\t},\n\n\t\t\t// 获取用户 OPENID\n\t\t\tasync getUserOpenId() {\n\t\t\t\ttry {\n\t\t\t\t\tconst loginRes = await uni.login({\n\t\t\t\t\t\tprovider: 'weixin'\n\t\t\t\t\t});\n\n\t\t\t\t\tconsole.log('微信登录成功:', loginRes);\n\n\t\t\t\t\t// 调用云函数获取 OPENID\n\t\t\t\t\tconst res = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'switchApi',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'getOpenId'\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (res.result.errCode === 0) {\n\t\t\t\t\t\tthis.user_open_id = res.result.openid;\n\t\t\t\t\t\tconsole.log('获取到的 OPENID:', this.user_open_id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('获取 OPENID 失败:', res.result.errMsg);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('获取用户信息失败:', e);\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n</script>\n\n<style lang=\"scss\">\n\t.container {\n\t\tmin-height: 100vh;\n\t\tbackground-color: #f5f5f5;\n\t}\n\n\t.swiper {\n\t\theight: 300px;\n\t\tbackground-color: #fff;\n\n\t\t.swiper-item {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tbackground-color: #fff;\n\n\t\t\t.switch-image {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tobject-fit: contain;\n\t\t\t}\n\t\t}\n\t}\n\n\t.info-list {\n\t\tmargin-top: 10px;\n\n\t\t:deep(.uni-list-item) {\n\t\t\t.uni-list-item__container {\n\t\t\t\tflex: 1;\n\t\t\t\tflex-direction: row;\n\t\t\t\tpadding: 12px 15px;\n\t\t\t}\n\n\t\t\t.uni-list-item__content {\n\t\t\t\tflex: none;\n\t\t\t\twidth: 100px;\n\t\t\t}\n\n\t\t\t.uni-list-item__content-title {\n\t\t\t\tfont-size: 14px;\n\t\t\t\tcolor: #666;\n\t\t\t\twhite-space: nowrap;\n\t\t\t}\n\n\t\t\t.uni-list-item__extra {\n\t\t\t\tflex: 1;\n\t\t\t\toverflow: visible;\n\t\t\t\talign-items: flex-end;\n\t\t\t}\n\n\t\t\t.uni-list-item__extra-text {\n\t\t\t\tfont-size: 14px;\n\t\t\t\tcolor: #333;\n\t\t\t\ttext-align: right;\n\t\t\t\twhite-space: normal;\n\t\t\t\tword-break: break-all;\n\t\t\t\tline-height: 1.4;\n\t\t\t\twidth: 100%;\n\t\t\t\tpadding-left: 15px;\n\t\t\t\tpadding-right: 15px;\n\t\t\t}\n\t\t}\n\t}\n\n\t.add-image {\n\t\t.add-button {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tbackground-color: #f8f8f8;\n\n\t\t\ttext {\n\t\t\t\tmargin-top: 8px;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tcolor: #999;\n\t\t\t}\n\t\t}\n\t}\n\n\t.action-sheet {\n\t\tbackground-color: #fff;\n\t\tborder-radius: 10px 10px 0 0;\n\t\toverflow: hidden;\n\n\t\t.action-item {\n\t\t\theight: 50px;\n\t\t\tline-height: 50px;\n\t\t\ttext-align: center;\n\t\t\tfont-size: 16px;\n\t\t\tborder-bottom: 1px solid #eee;\n\n\t\t\t&.delete {\n\t\t\t\tcolor: #ff3b30;\n\t\t\t}\n\n\t\t\t&.cancel {\n\t\t\t\tcolor: #666;\n\t\t\t\tmargin-top: 6px;\n\t\t\t}\n\n\t\t\t&:active {\n\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t}\n\t\t}\n\t}\n</style>\n","import MiniProgramPage from 'K:/HBuilderProjects/SWITCH/pages/switchInfo/switchInfo.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}