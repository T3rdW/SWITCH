{"version":3,"file":"switchInfo.js","sources":["pages/switchInfo/switchInfo.vue","../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvc3dpdGNoSW5mby9zd2l0Y2hJbmZvLnZ1ZQ"],"sourcesContent":["<template>\n\t<view class=\"container\">\n\t\t<!-- 图片管理按钮 - 隐藏式触发区域 -->\n\t\t<view class=\"image-manage-trigger\" @tap=\"triggerCount++\">\n\t\t\t<view v-if=\"showImageManage\" class=\"manage-buttons\">\n\t\t\t\t<button class=\"btn\" @tap=\"handleAddImage\">添加图片</button>\n\t\t\t\t<button class=\"btn\" @tap=\"handleEditImage\">修改图片</button>\n\t\t\t\t<button class=\"btn delete\" @tap=\"handleDeleteImage\">删除图片</button>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 图片轮播 -->\n\t\t<swiper class=\"swiper\" circular :indicator-dots=\"true\" :autoplay=\"true\" :interval=\"3000\" :duration=\"1000\" @change=\"handleSwiperChange\">\n\t\t\t<swiper-item v-for=\"(image, index) in switchImages\" :key=\"index\" class=\"swiper-item\">\n\t\t\t\t<image\n\t\t\t\t\t:src=\"image.fileID ? image.fileID : '/static/default_switch.webp'\"\n\t\t\t\t\tmode=\"aspectFit\"\n\t\t\t\t\tclass=\"switch-image\"\n\t\t\t\t\t@error=\"handleImageError(index)\"\n\t\t\t\t\t@load=\"handleImageLoad(index)\"\n\t\t\t\t/>\n\t\t\t</swiper-item>\n\t\t\t<!-- 无图片时显示默认图片 -->\n\t\t\t<swiper-item v-if=\"!switchImages.length\" class=\"swiper-item\">\n\t\t\t\t<image src=\"/static/default_switch.webp\" mode=\"aspectFit\" class=\"switch-image\" />\n\t\t\t</swiper-item>\n\t\t</swiper>\n\n\t\t<!-- 轴体信息列表 -->\n\t\t<uni-list class=\"info-list\">\n\t\t\t<!-- 基本信息 -->\n\t\t\t<uni-list-item title=\"轴体名称\" :right-text=\"switchData.switch_name || '暂无'\" />\n\t\t\t<uni-list-item title=\"代工厂\" :right-text=\"switchData.manufacturer || '暂无'\" />\n\t\t\t<uni-list-item title=\"轴体分类\" :right-text=\"switchData.switch_type || '暂无'\" />\n\t\t\t<uni-list-item title=\"上市时间\" :right-text=\"switchData.release_date || '暂无'\" />\n\t\t\t<uni-list-item title=\"价格\" :right-text=\"getPriceText(switchData.price)\" />\n\n\t\t\t<!-- 规格参数 -->\n\t\t\t<uni-list-item title=\"轴心材质\" :right-text=\"switchData.stem_material || '暂无'\" />\n\t\t\t<uni-list-item title=\"上盖材质\" :right-text=\"switchData.top_housing_material || '暂无'\" />\n\t\t\t<uni-list-item title=\"底壳材质\" :right-text=\"switchData.bottom_housing_material || '暂无'\" />\n\t\t\t<uni-list-item title=\"触发压力\" :right-text=\"getForceText(switchData.actuation_force)\" />\n\t\t\t<uni-list-item title=\"触发行程\" :right-text=\"getDistanceText(switchData.actuation_travel)\" />\n\t\t\t<uni-list-item title=\"触底压力\" :right-text=\"getForceText(switchData.bottom_force)\" />\n\t\t\t<uni-list-item title=\"触底行程\" :right-text=\"getDistanceText(switchData.bottom_out_travel)\" />\n\t\t\t<uni-list-item title=\"总行程\" :right-text=\"getDistanceText(switchData.total_travel)\" />\n\t\t\t<uni-list-item title=\"弹簧长度\" :right-text=\"switchData.spring_length || '暂无'\" />\n\t\t\t<uni-list-item title=\"出厂润滑\" :right-text=\"switchData.factory_lube ? '是' : '否'\" />\n\t\t\t<uni-list-item title=\"寿命\" :right-text=\"switchData.lifespan || '暂无'\" />\n\n\t\t\t<!-- 其他信息 -->\n\t\t\t<uni-list-item title=\"更新时间\" :right-text=\"formatTime(switchData.update_time)\" />\n\t\t\t<uni-list-item title=\"数据来源\" :right-text=\"switchData.data_source || '暂无'\" />\n\t\t\t<related-keyboards-item\n\t\t\t\t:keyboards=\"getRelatedKeyboards(switchData.related_keyboards)\"\n\t\t\t/>\n\t\t\t<uni-list-item title=\"停产\" :right-text=\"switchData.discontinued ? '是' : '否'\" />\n\t\t\t<remark-item :remark=\"switchData.remark || '暂无'\" />\n\t\t\t<uni-list-item title=\"审核状态\" :right-text=\"switchData.audit_status || '暂无'\" />\n\t\t</uni-list>\n\t</view>\n</template>\n\n<script>\n\timport RelatedKeyboardsItem from '@/components/related-keyboards-item.vue'\n\timport RemarkItem from '@/components/remark-item.vue'\n\n\texport default {\n\t\tcomponents: {\n\t\t\tRelatedKeyboardsItem,\n\t\t\tRemarkItem\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tswitchData: {}, // 轴体数据\n\t\t\t\tswitchImages: [], // 轴体图片数组\n\t\t\t\ttriggerCount: 0, // 触发计数器\n\t\t\t\tshowImageManage: false, // 是否显示图片管理按钮\n\t\t\t\tcurrentImageIndex: 0, // 当前显示的图片索引\n\t\t\t\tMAX_WIDTH: 1280,\n\t\t\t\tMAX_HEIGHT: 1280,\n\t\t\t\tQUALITY: 0.8\n\t\t\t}\n\t\t},\n\n\t\twatch: {\n\t\t\t// 监听触发计数器\n\t\t\ttriggerCount(val) {\n\t\t\t\tif (val >= 5) { // 连续点击5次触发\n\t\t\t\t\tthis.showImageManage = true\n\t\t\t\t\tthis.triggerCount = 0\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '已启用图片管理',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonLoad(options) {\n\t\t\tconsole.log('页面参数:', options)\n\t\t\t// 监听数据传递事件\n\t\t\tuni.$on('switchData', this.handleSwitchData)\n\t\t\tif (options.id) {\n\t\t\t\tthis.loadSwitchData(options.id)\n\t\t\t}\n\t\t},\n\n\t\tonUnload() {\n\t\t\t// 页面卸载时移除事件监听\n\t\t\tuni.$off('switchData', this.handleSwitchData)\n\t\t},\n\n\t\tmethods: {\n\t\t\t// 处理图片加载成功\n\t\t\thandleImageLoad(index) {\n\t\t\t\tconsole.log('图片加载成功:', index, this.switchImages[index]);\n\t\t\t},\n\n\t\t\t// 处理传递来的轴体数据\n\t\t\thandleSwitchData(data) {\n\t\t\t\tconsole.log('接收到轴体数据:', data)\n\t\t\t\tthis.switchData = data\n\t\t\t\t// 处理图片数组，只保留有效的 fileID\n\t\t\t\tthis.switchImages = Array.isArray(data.preview_images) ? data.preview_images : []\n\t\t\t\tconsole.log('处理后的图片数组:', this.switchImages)\n\t\t\t},\n\n\t\t\t// 加载轴体数据\n\t\t\tasync loadSwitchData(id) {\n\t\t\t\ttry {\n\t\t\t\t\tuni.showLoading({\n\t\t\t\t\t\ttitle: '加载中...'\n\t\t\t\t\t})\n\n\t\t\t\t\tconst res = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'switchApi',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'getSwitchById',\n\t\t\t\t\t\t\tid: id\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tconsole.log('获取轴体数据结果:', res)\n\n\t\t\t\t\tif (res.result.errCode === 0) {\n\t\t\t\t\t\tthis.switchData = res.result.data\n\t\t\t\t\t\t// 处理图片数组，只保留有效的 fileID\n\t\t\t\t\t\tthis.switchImages = Array.isArray(this.switchData.preview_images) ? this.switchData.preview_images : []\n\t\t\t\t\t\tconsole.log('加载后的图片数组:', this.switchImages)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: res.result.errMsg || '加载失败',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('加载轴体数据失败:', e)\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '加载失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t} finally {\n\t\t\t\t\tuni.hideLoading()\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 格式化价格\n\t\t\tgetPriceText(price) {\n\t\t\t\treturn price ? `¥${price}` : '暂无报价'\n\t\t\t},\n\n\t\t\t// 格式化力度\n\t\t\tgetForceText(force) {\n\t\t\t\tif (!force) return '暂无数据'\n\t\t\t\t// 如果已经包含 'gf' 就直接返回，否则添加 'gf'\n\t\t\t\treturn force.toString().toLowerCase().includes('gf') ? force : `${force}gf`\n\t\t\t},\n\n\t\t\t// 格式化距离 mm\n\t\t\tgetDistanceText(distance) {\n\t\t\t\t// 如果值为空，返回暂无数据\n\t\t\t\tif (!distance) return '暂无数据'\n\n\t\t\t\tconst distanceStr = distance.toString().toLowerCase()\n\n\t\t\t\t// 如果已经包含 mm，直接返回\n\t\t\t\tif (distanceStr.includes('mm')) {\n\t\t\t\t\treturn distance\n\t\t\t\t}\n\n\t\t\t\t// 如果不包含数字，直接返回原值\n\t\t\t\tif (!/\\d/.test(distanceStr)) {\n\t\t\t\t\treturn distance\n\t\t\t\t}\n\n\t\t\t\t// 包含数字但不包含 mm，添加 mm\n\t\t\t\treturn `${distance}mm`\n\t\t\t},\n\n\t\t\t// 格式化时间\n\t\t\tformatTime(time) {\n\t\t\t\tif (!time) return '暂无数据'\n\t\t\t\ttry {\n\t\t\t\t\tconst date = new Date(time)\n\t\t\t\t\tconst year = date.getFullYear()\n\t\t\t\t\tconst month = String(date.getMonth() + 1).padStart(2, '0')\n\t\t\t\t\tconst day = String(date.getDate()).padStart(2, '0')\n\t\t\t\t\tconst hours = String(date.getHours()).padStart(2, '0')\n\t\t\t\t\tconst minutes = String(date.getMinutes()).padStart(2, '0')\n\t\t\t\t\tconst seconds = String(date.getSeconds()).padStart(2, '0')\n\t\t\t\t\treturn `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('时间格式化失败:', e)\n\t\t\t\t\treturn time\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 处理相关键盘字段的数据\n\t\t\tgetRelatedKeyboards(keyboards) {\n\t\t\t\tif (!keyboards || !Array.isArray(keyboards) || keyboards.length === 0) {\n\t\t\t\t\treturn '--'\n\t\t\t\t}\n\t\t\t\treturn keyboards.join(', ')\n\t\t\t},\n\n\t\t\t// 处理轮播图切换\n\t\t\thandleSwiperChange(e) {\n\t\t\t\tthis.currentImageIndex = e.detail.current\n\t\t\t},\n\n\t\t\t// 压缩图片\n\t\t\tasync compressImage(tempFilePath) {\n\t\t\t\ttry {\n\t\t\t\t\t// 获取图片信息\n\t\t\t\t\tconst imageInfo = await new Promise((resolve, reject) => {\n\t\t\t\t\t\tuni.getImageInfo({\n\t\t\t\t\t\t\tsrc: tempFilePath,\n\t\t\t\t\t\t\tsuccess: resolve,\n\t\t\t\t\t\t\tfail: reject\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t// 计算压缩后的尺寸\n\t\t\t\t\tlet { width, height } = imageInfo;\n\t\t\t\t\tif (width > this.MAX_WIDTH || height > this.MAX_HEIGHT) {\n\t\t\t\t\t\tconst ratio = Math.min(this.MAX_WIDTH / width, this.MAX_HEIGHT / height);\n\t\t\t\t\t\twidth = Math.floor(width * ratio);\n\t\t\t\t\t\theight = Math.floor(height * ratio);\n\t\t\t\t\t}\n\n\t\t\t\t\t// 压缩图片\n\t\t\t\t\tconst compressedPath = await new Promise((resolve, reject) => {\n\t\t\t\t\t\tuni.compressImage({\n\t\t\t\t\t\t\tsrc: tempFilePath,\n\t\t\t\t\t\t\tquality: this.QUALITY,\n\t\t\t\t\t\t\tcompressedWidth: width,\n\t\t\t\t\t\t\tcompressedHeight: height,\n\t\t\t\t\t\t\tsuccess: (res) => resolve(res.tempFilePath),\n\t\t\t\t\t\t\tfail: reject\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\treturn compressedPath;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('压缩图片失败:', e);\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 生成图片文件名\n\t\t\tgetImageFileName(type = 'detail', index) {\n\t\t\t\t// 优先使用英文名，如果没有则使用中文名\n\t\t\t\tlet switchName = this.switchData.switch_name_en || this.switchData.switch_name || 'unknown';\n\n\t\t\t\t// 移除特殊字符，只保留字母、数字、下划线\n\t\t\t\tconst safeSwitchName = switchName\n\t\t\t\t\t.replace(/\\s+/g, '_') // 空格替换为下划线\n\t\t\t\t\t.replace(/[^a-zA-Z0-9_]/g, '') // 移除其他特殊字符\n\t\t\t\t\t.replace(/_+/g, '_') // 多个下划线替换为单个\n\t\t\t\t\t.replace(/^_|_$/g, ''); // 移除首尾下划线\n\n\t\t\t\treturn `${safeSwitchName}_${type}_${index + 1}.webp`;\n\t\t\t},\n\n\t\t\t// 添加图片\n\t\t\tasync handleAddImage() {\n\t\t\t\ttry {\n\t\t\t\t\tconst now = new Date().toLocaleString('zh-CN', { timeZone: 'Asia/Shanghai' });\n\t\t\t\t\t// 检查是否已有图片数组\n\t\t\t\t\tif (!this.switchData.preview_images) {\n\t\t\t\t\t\tthis.switchData.preview_images = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tconst res = await uni.chooseImage({\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tsizeType: ['original'],\n\t\t\t\t\t\tsourceType: ['album', 'camera']\n\t\t\t\t\t});\n\n\t\t\t\t\tconst tempFilePath = res.tempFilePaths[0];\n\t\t\t\t\t// 压缩图片\n\t\t\t\t\tconst compressedPath = await this.compressImage(tempFilePath);\n\n\t\t\t\t\t// 使用规范的文件命名\n\t\t\t\t\tconst fileName = this.getImageFileName('detail', this.switchImages.length);\n\t\t\t\t\tconst cloudPath = fileName; // 直接使用文件名\n\n\t\t\t\t\tuni.showLoading({ title: '上传中...' });\n\n\t\t\t\t\t// 上传图片\n\t\t\t\t\tconst uploadRes = await uniCloud.uploadFile({\n\t\t\t\t\t\tfilePath: compressedPath,\n\t\t\t\t\t\tcloudPath\n\t\t\t\t\t});\n\n\t\t\t\t\tconsole.log('上传结果:', uploadRes); // 添加日志\n\n\t\t\t\t\tif (!uploadRes.fileID) {\n\t\t\t\t\t\tthrow new Error('上传失败：未获取到 fileID');\n\t\t\t\t\t}\n\n\t\t\t\t\t// 构建图片信息对象\n\t\t\t\t\tconst imageInfo = {\n\t\t\t\t\t\tfileID: uploadRes.fileID,\n\t\t\t\t\t\ttype: 'detail',\n\t\t\t\t\t\tfileName: fileName,\n\t\t\t\t\t\tuploadTime: now,\n\t\t\t\t\t\tupdateTime: ''\n\t\t\t\t\t};\n\n\t\t\t\t\tconsole.log('图片信息:', imageInfo); // 添加日志\n\n\t\t\t\t\t// 更新数据库\n\t\t\t\t\tconst updateRes = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'switchApi',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'updateSwitchImage',\n\t\t\t\t\t\t\tswitchId: this.switchData._id,\n\t\t\t\t\t\t\timageIndex: this.switchImages.length,\n\t\t\t\t\t\t\timageInfo: imageInfo\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tconsole.log('数据库更新结果:', updateRes); // 添加日志\n\n\t\t\t\t\tif (updateRes.result.errCode !== 0) {\n\t\t\t\t\t\tthrow new Error('更新数据库失败：' + updateRes.result.errMsg);\n\t\t\t\t\t}\n\n\t\t\t\t\t// 深拷贝图片信息\n\t\t\t\t\tconst newImageInfo = JSON.parse(JSON.stringify(imageInfo));\n\t\t\t\t\tthis.switchImages.push(newImageInfo);\n\t\t\t\t\tthis.switchData.preview_images = JSON.parse(JSON.stringify(this.switchImages));\n\n\t\t\t\t\t// 强制更新视图\n\t\t\t\t\tthis.$forceUpdate();\n\n\t\t\t\t\t// 刷新数据以确保同步\n\t\t\t\t\tawait this.loadSwitchData(this.switchData._id);\n\n\t\t\t\t\tuni.showToast({ title: '添加成功' });\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('添加图片失败:', e);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '添加失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t} finally {\n\t\t\t\t\tuni.hideLoading();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 修改图片\n\t\t\tasync handleEditImage() {\n\t\t\t\tif (!this.switchImages.length) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '没有可修改的图片',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tconst now = new Date().toLocaleString('zh-CN', { timeZone: 'Asia/Shanghai' });\n\t\t\t\t\tconst res = await uni.chooseImage({\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tsizeType: ['original'],\n\t\t\t\t\t\tsourceType: ['album', 'camera']\n\t\t\t\t\t})\n\n\t\t\t\t\tconst tempFilePath = res.tempFilePaths[0]\n\t\t\t\t\t// 压缩并转换图片\n\t\t\t\t\tconst compressedPath = await this.compressImage(tempFilePath)\n\n\t\t\t\t\t// 使用规范的文件命名\n\t\t\t\t\tconst fileName = this.getImageFileName('detail', this.currentImageIndex);\n\t\t\t\t\tconst cloudPath = fileName; // 直接使用文件名\n\n\t\t\t\t\tuni.showLoading({ title: '上传中...' });\n\n\t\t\t\t\tconst uploadRes = await uniCloud.uploadFile({\n\t\t\t\t\t\tfilePath: compressedPath,\n\t\t\t\t\t\tcloudPath\n\t\t\t\t\t});\n\n\t\t\t\t\t// 构建新的图片信息对象\n\t\t\t\t\tconst imageInfo = {\n\t\t\t\t\t\tfileID: uploadRes.fileID,\n\t\t\t\t\t\ttype: 'detail',\n\t\t\t\t\t\tfileName: fileName,\n\t\t\t\t\t\tuploadTime: this.switchImages[this.currentImageIndex].uploadTime,\n\t\t\t\t\t\tupdateTime: now\n\t\t\t\t\t};\n\n\t\t\t\t\tawait uniCloud.callFunction({\n\t\t\t\t\t\tname: 'switchApi',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'updateSwitchImage',\n\t\t\t\t\t\t\tswitchId: this.switchData._id,\n\t\t\t\t\t\t\timageIndex: this.currentImageIndex,\n\t\t\t\t\t\t\timageInfo: imageInfo\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// 更新本地数据\n\t\t\t\t\tthis.$set(this.switchImages, this.currentImageIndex, imageInfo);\n\t\t\t\t\tthis.switchData.preview_images = this.switchImages;\n\n\t\t\t\t\t// 刷新数据以确保同步\n\t\t\t\t\tthis.loadSwitchData(this.switchData._id);\n\n\t\t\t\t\tuni.showToast({ title: '修改成功' });\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('修改图片失败:', e);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '修改失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t} finally {\n\t\t\t\t\tuni.hideLoading();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 删除图片\n\t\t\tasync handleDeleteImage() {\n\t\t\t\tif (!this.switchImages.length) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '没有可删除的图片',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '确认删除',\n\t\t\t\t\tcontent: '是否删除当前图片？',\n\t\t\t\t\tsuccess: async (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tuni.showLoading({ title: '删除中...' });\n\n\t\t\t\t\t\t\t\tawait uniCloud.callFunction({\n\t\t\t\t\t\t\t\t\tname: 'switchApi',\n\t\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\t\taction: 'updateSwitchImage',\n\t\t\t\t\t\t\t\t\t\tswitchId: this.switchData._id,\n\t\t\t\t\t\t\t\t\t\timageIndex: this.currentImageIndex,\n\t\t\t\t\t\t\t\t\t\timageInfo: null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tthis.loadSwitchData(this.switchData._id);\n\n\t\t\t\t\t\t\t\tuni.showToast({ title: '删除成功' });\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tconsole.error('删除图片失败:', e);\n\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\ttitle: '删除失败',\n\t\t\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t// 处理图片加载错误\n\t\t\thandleImageError(index) {\n\t\t\t\tconsole.log('图片加载失败:', index)\n\t\t\t\t// 将错误图片替换为默认图片\n\t\t\t\tif (this.switchImages[index]) {\n\t\t\t\t\tthis.$set(this.switchImages[index], 'fileID', '/static/default_switch.webp')\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style lang=\"scss\">\n\t.container {\n\t\tmin-height: 100vh;\n\t\tbackground-color: #f5f5f5;\n\t}\n\n\t.swiper {\n\t\theight: 300px;\n\t\tbackground-color: #fff;\n\n\t\t.swiper-item {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tbackground-color: #fff;\n\n\t\t\t.switch-image {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tobject-fit: contain;\n\t\t\t}\n\t\t}\n\t}\n\n\t.info-list {\n\t\tmargin-top: 10px;\n\n\t\t:deep(.uni-list-item) {\n\t\t\t.uni-list-item__container {\n\t\t\t\tflex: 1;\n\t\t\t\tflex-direction: row;\n\t\t\t\tpadding: 12px 15px;\n\t\t\t}\n\n\t\t\t.uni-list-item__content {\n\t\t\t\tflex: none;\n\t\t\t\twidth: 100px;\n\t\t\t}\n\n\t\t\t.uni-list-item__content-title {\n\t\t\t\tfont-size: 14px;\n\t\t\t\tcolor: #666;\n\t\t\t\twhite-space: nowrap;\n\t\t\t}\n\n\t\t\t.uni-list-item__extra {\n\t\t\t\tflex: 1;\n\t\t\t\toverflow: visible;\n\t\t\t\talign-items: flex-end;\n\t\t\t}\n\n\t\t\t.uni-list-item__extra-text {\n\t\t\t\tfont-size: 14px;\n\t\t\t\tcolor: #333;\n\t\t\t\ttext-align: right;\n\t\t\t\twhite-space: normal;\n\t\t\t\tword-break: break-all;\n\t\t\t\tline-height: 1.4;\n\t\t\t\twidth: 100%;\n\t\t\t\tpadding-left: 15px;\n\t\t\t\tpadding-right: 15px;\n\t\t\t}\n\t\t}\n\t}\n\n\t.image-manage-trigger {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tright: 0;\n\t\twidth: 50px;\n\t\theight: 50px;\n\t\tz-index: 100;\n\t\tborder: 1px solid rgba(255, 0, 0, 0.3);\n\n\t\t.manage-buttons {\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tright: 0;\n\t\t\tpadding: 10px;\n\t\t\tbackground-color: rgba(0, 0, 0, 0.8);\n\t\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n\t\t\tborder-radius: 0 0 0 10px;\n\n\t\t\t.btn {\n\t\t\t\tmargin: 8px 0;\n\t\t\t\tpadding: 5px 10px;\n\t\t\t\tfont-size: 12px;\n\t\t\t\tbackground-color: #4CAF50;\n\t\t\t\tcolor: white;\n\t\t\t\tborder: none;\n\t\t\t\tborder-radius: 4px;\n\t\t\t\twidth: 100%;\n\t\t\t\tmin-width: 80px;\n\n\t\t\t\t&.delete {\n\t\t\t\t\tbackground-color: #f44336;\n\t\t\t\t}\n\n\t\t\t\t&:active {\n\t\t\t\t\topacity: 0.8;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t&:active {\n\t\t\tbackground-color: rgba(255, 0, 0, 0.1);\n\t\t}\n\t}\n</style>\n","import MiniProgramPage from 'K:/HBuilderProjects/SWITCH/pages/switchInfo/switchInfo.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","uniCloud"],"mappings":"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"}