{"version":3,"file":"switchInfo.js","sources":["pages/switchInfo/switchInfo.vue","../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvc3dpdGNoSW5mby9zd2l0Y2hJbmZvLnZ1ZQ"],"sourcesContent":["<template>\n\t<view class=\"container\">\n\t\t<!-- 添加收藏按钮 -->\n\t\t<view class=\"favorite-btn\" @tap=\"handleFavorite\">\n\t\t\t<text :class=\"['favorite-icon', { 'is-favorited': isFavorited }]\">\n\t\t\t\t{{ isFavorited ? '♥' : '♡' }}\n\t\t\t</text>\n\t\t</view>\n\n\t\t<!-- 图片管理遮罩层 -->\n\t\t<view class=\"edit-overlay\" v-if=\"isEditing\">\n\t\t\t<view class=\"edit-container\">\n\t\t\t\t<view class=\"edit-header\">\n\t\t\t\t\t<text class=\"edit-title\">图片管理 {{ switchImages.length ? `(${currentImageIndex + 1}/${switchImages.length})` : '' }}</text>\n\t\t\t\t\t<text class=\"close-btn\" @tap=\"isEditing = false\">×</text>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"edit-image-container\">\n\t\t\t\t\t<view class=\"type-selector\" v-if=\"currentImage.fileID\">\n\t\t\t\t\t\t<picker\n\t\t\t\t\t\t\tmode=\"selector\"\n\t\t\t\t\t\t\t:range=\"imageTypeOptions\"\n\t\t\t\t\t\t\trange-key=\"text\"\n\t\t\t\t\t\t\t:value=\"getTypeIndex(currentImage.type)\"\n\t\t\t\t\t\t\t@change=\"handleTypeChange\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<view class=\"picker-content\">\n\t\t\t\t\t\t\t\t<text>{{ currentImage.type ? getImageTypeText(currentImage.type) : '选择类型' }}</text>\n\t\t\t\t\t\t\t\t<text class=\"picker-arrow\">▼</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</picker>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"nav-btn prev\" @tap=\"handlePrevImage\" v-if=\"switchImages.length > 1\">\n\t\t\t\t\t\t<text class=\"nav-icon\">‹</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<image\n\t\t\t\t\t\tv-if=\"switchImages.length\"\n\t\t\t\t\t\t:src=\"currentImage.fileID || '/static/default_switch.webp'\"\n\t\t\t\t\t\tmode=\"aspectFit\"\n\t\t\t\t\t\tclass=\"edit-image\"\n\t\t\t\t\t/>\n\t\t\t\t\t<view v-else class=\"empty-image\">\n\t\t\t\t\t\t<text>暂无图片</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"nav-btn next\" @tap=\"handleNextImage\" v-if=\"switchImages.length > 1\">\n\t\t\t\t\t\t<text class=\"nav-icon\">›</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"edit-buttons\">\n\t\t\t\t\t<view class=\"btn-row\">\n\t\t\t\t\t\t<button class=\"btn add\" @tap=\"handleAddImage\">添加图片</button>\n\t\t\t\t\t\t<button class=\"btn\" @tap=\"handleEditConfirm\" v-if=\"switchImages.length\">更换图片</button>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"btn-row\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclass=\"btn set-main\"\n\t\t\t\t\t\t\t@tap=\"handleSetMainImage\"\n\t\t\t\t\t\t\tv-if=\"switchImages.length > 1 && currentImageIndex !== 0\"\n\t\t\t\t\t\t>设为主图</button>\n\t\t\t\t\t\t<button class=\"btn delete\" @tap=\"handleDeleteImage\" v-if=\"switchImages.length\">删除图片</button>\n\t\t\t\t\t\t<button class=\"btn cancel\" @tap=\"isEditing = false\">取消</button>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t<!-- 图片指示器 -->\n\t\t\t\t<view class=\"image-indicators\" v-if=\"switchImages.length > 1\">\n\t\t\t\t\t<view\n\t\t\t\t\t\tv-for=\"(_, index) in switchImages\"\n\t\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t\t:class=\"['indicator-dot', { active: index === currentImageIndex }]\"\n\t\t\t\t\t\t@tap=\"handleIndicatorTap(index)\"\n\t\t\t\t\t></view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 图片管理触发区域 -->\n\t\t<view class=\"image-manage-trigger\" @tap=\"handleTriggerTap\">\n\t\t</view>\n\n\t\t<!-- 图片轮播 -->\n\t\t<swiper class=\"swiper\" circular :indicator-dots=\"true\" :autoplay=\"!isEditing\" :interval=\"3000\" :duration=\"300\" @change=\"handleSwiperChange\">\n\t\t\t<swiper-item v-for=\"(image, index) in switchImages\" :key=\"index\" class=\"swiper-item\">\n\t\t\t\t<view class=\"image-wrapper\">\n\t\t\t\t\t<image\n\t\t\t\t\t\t:src=\"image.fileID ? image.fileID : '/static/default_switch.webp'\"\n\t\t\t\t\t\tmode=\"aspectFit\"\n\t\t\t\t\t\tclass=\"switch-image\"\n\t\t\t\t\t\t@error=\"handleImageError(index)\"\n\t\t\t\t\t\t@load=\"handleImageLoad(index)\"\n\t\t\t\t\t\t@tap=\"handleImageTap(index)\"\n\t\t\t\t\t/>\n\t\t\t\t\t<view class=\"image-type-tag\" v-if=\"image.type\">\n\t\t\t\t\t\t{{ getImageTypeText(image.type) }}\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</swiper-item>\n\t\t</swiper>\n\n\t\t<!-- 轴体信息列表 -->\n\t\t<uni-list class=\"info-list\">\n\t\t\t<!-- 基本信息 -->\n\t\t\t<uni-list-item title=\"轴体名称\" :right-text=\"switchData.switch_name || '暂无'\" />\n\t\t\t<uni-list-item title=\"代工厂\" :right-text=\"switchData.manufacturer || '暂无'\" />\n\t\t\t<uni-list-item title=\"轴体分类\" :right-text=\"switchData.switch_type || '暂无'\" />\n\t\t\t<uni-list-item title=\"上市时间\" :right-text=\"switchData.release_date || '暂无'\" />\n\t\t\t<uni-list-item title=\"价格\" :right-text=\"getPriceText(switchData.price)\" />\n\n\t\t\t<!-- 规格参数 -->\n\t\t\t<uni-list-item title=\"轴心材质\" :right-text=\"switchData.stem_material || '暂无'\" />\n\t\t\t<uni-list-item title=\"上盖材质\" :right-text=\"switchData.top_housing_material || '暂无'\" />\n\t\t\t<uni-list-item title=\"底壳材质\" :right-text=\"switchData.bottom_housing_material || '暂无'\" />\n\t\t\t<uni-list-item title=\"触发压力\" :right-text=\"getForceText(switchData.actuation_force)\" />\n\t\t\t<uni-list-item title=\"触发行程\" :right-text=\"getDistanceText(switchData.actuation_travel)\" />\n\t\t\t<uni-list-item title=\"触底压力\" :right-text=\"getForceText(switchData.bottom_force)\" />\n\t\t\t<uni-list-item title=\"触底行程\" :right-text=\"getDistanceText(switchData.bottom_out_travel)\" />\n\t\t\t<uni-list-item title=\"总行程\" :right-text=\"getDistanceText(switchData.total_travel)\" />\n\t\t\t<uni-list-item title=\"弹簧长度\" :right-text=\"switchData.spring_length || '暂无'\" />\n\t\t\t<uni-list-item title=\"出厂润滑\" :right-text=\"switchData.factory_lube ? '是' : '否'\" />\n\t\t\t<uni-list-item title=\"寿命\" :right-text=\"switchData.lifespan || '暂无'\" />\n\n\t\t\t<!-- 其他信息 -->\n\t\t\t<uni-list-item title=\"最后更新时间\" :right-text=\"formatTime(switchData.update_time)\" />\n\t\t\t<uni-list-item title=\"数据来源\" :right-text=\"switchData.data_source || '互联网'\" />\n\t\t\t<related-keyboards-item\n\t\t\t\t:keyboards=\"getRelatedKeyboards(switchData.related_keyboards)\"\n\t\t\t/>\n\t\t\t<uni-list-item title=\"停产\" :right-text=\"switchData.discontinued ? '是' : '否'\" />\n\t\t\t<remark-item :remark=\"switchData.remark || ''\" />\n\t\t\t<uni-list-item title=\"审核状态\" :right-text=\"getAuditStatusText(switchData.audit_status)\" />\n\t\t</uni-list>\n\t</view>\n</template>\n\n<script>\n\timport RelatedKeyboardsItem from '@/components/related-keyboards-item.vue'\n\timport RemarkItem from '@/components/remark-item.vue'\n\n\t// 审核状态映射\n\tconst AUDIT_STATUS_MAP = {\n\t\t'pending': '未审核',\n\t\t'reviewing': '审核中',\n\t\t'approved': '已审核'\n\t};\n\n\texport default {\n\t\tcomponents: {\n\t\t\tRelatedKeyboardsItem,\n\t\t\tRemarkItem\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tswitchData: {}, // 轴体数据\n\t\t\t\tswitchImages: [], // 轴体图片数组\n\t\t\t\ttriggerCount: 0, // 触发计数器\n\t\t\t\tcurrentImageIndex: 0, // 当前显示的图片索引\n\t\t\t\tisEditing: false, // 是否正在编辑图片\n\t\t\t\tisLoading: false, // 是否正在加载数据\n\t\t\t\timageTypeOptions: [\n\t\t\t\t\t{ text: '官方图', value: 'official' },\n\t\t\t\t\t{ text: '详情图', value: 'detail' },\n\t\t\t\t\t{ text: '上盖图', value: 'top' },\n\t\t\t\t\t{ text: '轴心图', value: 'stem' },\n\t\t\t\t\t{ text: '弹簧图', value: 'spring' },\n\t\t\t\t\t{ text: '底壳图', value: 'bottom' },\n\t\t\t\t\t{ text: '侧图', value: 'side' },\n\t\t\t\t\t{ text: '外壳图', value: 'housing' },\n\t\t\t\t\t{ text: '其他视图', value: 'other' }\n\t\t\t\t],\n\t\t\t\tMAX_WIDTH: 1280,\n\t\t\t\tMAX_HEIGHT: 1280,\n\t\t\t\tQUALITY: 0.8,\n\t\t\t\twaitForData: null, // 用于等待数据传递的Promise竞争\n\t\t\t\tisFavorited: false, // 是否已收藏\n\t\t\t}\n\t\t},\n\n\t\tcomputed: {\n\t\t\tcurrentImage() {\n\t\t\t\treturn this.switchImages[this.currentImageIndex] || {};\n\t\t\t}\n\t\t},\n\n\t\tonLoad(options) {\n\t\t\tif (options.id) {\n\t\t\t\tthis.loadSwitchData(options.id);\n\t\t\t}\n\t\t},\n\n\t\t// 在页面显示时检查收藏状态\n\t\tonShow() {\n\t\t\t// 如果已加载轴体数据，检查收藏状态\n\t\t\tif (this.switchData._id) {\n\t\t\t\tthis.checkFavoriteStatus();\n\t\t\t}\n\t\t},\n\n\t\tonUnload() {\n\t\t\t// 清理事件监听和等待函数\n\t\t\tuni.$off('switchData', this.handleSwitchData);\n\t\t\tthis.waitForData = null;\n\t\t},\n\n\t\tmethods: {\n\t\t\t// 处理图片加载成功\n\t\t\thandleImageLoad(index) {\n\t\t\t\t// console.log('图片加载成功:', index, {\n\t\t\t\t// \tfileID: this.switchImages[index].fileID,\n\t\t\t\t// \ttype: this.switchImages[index].type\n\t\t\t\t// });\n\t\t\t},\n\n\t\t\t// 处理传递来的轴体数据\n\t\t\thandleSwitchData(data) {\n\t\t\t\tif (this.switchData._id === data._id) {\n\t\t\t\t\tconsole.log('已有相同数据，跳过更新:', {\n\t\t\t\t\t\tswitchName: data.switch_name,\n\t\t\t\t\t\tid: data._id\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log('接收到首页传递的数据:', {\n\t\t\t\t\tswitchName: data.switch_name,\n\t\t\t\t\tid: data._id,\n\t\t\t\t\timageCount: Array.isArray(data.preview_images) ? data.preview_images.length : 0\n\t\t\t\t});\n\n\t\t\t\tthis.switchData = data;\n\t\t\t\tif (Array.isArray(data.preview_images)) {\n\t\t\t\t\tthis.switchImages = data.preview_images.map(img => {\n\t\t\t\t\t\tif (!img || !img.fileID) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tfileID: '/static/default_switch.webp',\n\t\t\t\t\t\t\t\ttype: 'detail',\n\t\t\t\t\t\t\t\tfileName: 'default_switch.webp',\n\t\t\t\t\t\t\t\tuploadTime: '',\n\t\t\t\t\t\t\t\tupdateTime: ''\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn img;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.switchImages = [{\n\t\t\t\t\t\tfileID: '/static/default_switch.webp',\n\t\t\t\t\t\ttype: 'detail',\n\t\t\t\t\t\tfileName: 'default_switch.webp',\n\t\t\t\t\t\tuploadTime: '',\n\t\t\t\t\t\tupdateTime: ''\n\t\t\t\t\t}];\n\t\t\t\t}\n\n\t\t\t\t// 更新页面标题\n\t\t\t\tif (data.switch_name) {\n\t\t\t\t\twx.setNavigationBarTitle({\n\t\t\t\t\t\ttitle: data.switch_name\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// 通知等待已收到数据\n\t\t\t\tif (this.waitForData) {\n\t\t\t\t\tthis.waitForData('received');\n\t\t\t\t\tthis.waitForData = null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 格式化价格\n\t\t\tgetPriceText(price) {\n\t\t\t\treturn price ? `¥${price}` : '暂无报价'\n\t\t\t},\n\n\t\t\t// 格式化力度\n\t\t\tgetForceText(force) {\n\t\t\t\tif (!force) return '暂无数据'\n\t\t\t\t// 如果已经包含 'gf' 就直接返回，否则添加 'gf'\n\t\t\t\treturn force.toString().toLowerCase().includes('gf') ? force : `${force}gf`\n\t\t\t},\n\n\t\t\t// 格式化距离 mm\n\t\t\tgetDistanceText(distance) {\n\t\t\t\t// 如果值为空，返回暂无数据\n\t\t\t\tif (!distance) return '暂无数据'\n\n\t\t\t\tconst distanceStr = distance.toString().toLowerCase()\n\n\t\t\t\t// 如果已经包含 mm，直接返回\n\t\t\t\tif (distanceStr.includes('mm')) {\n\t\t\t\t\treturn distance\n\t\t\t\t}\n\n\t\t\t\t// 如果不包含数字，直接返回原值\n\t\t\t\tif (!/\\d/.test(distanceStr)) {\n\t\t\t\t\treturn distance\n\t\t\t\t}\n\n\t\t\t\t// 包含数字但不包含 mm，添加 mm\n\t\t\t\treturn `${distance}mm`\n\t\t\t},\n\n\t\t\t// 获取北京时间的 ISO 字符串\n\t\t\tgetBeiJingISOString() {\n\t\t\t\tconst now = new Date();\n\t\t\t\t// 获取时区偏移（北京时区 +08:00）\n\t\t\t\tconst offset = 8 * 60;\n\t\t\t\t// 计算北京时间的时间戳\n\t\t\t\tconst beijingTime = new Date(now.getTime() + (offset + now.getTimezoneOffset()) * 60000);\n\t\t\t\t// 返回 ISO 8601 格式的时间字符串（包含时区信息）\n\t\t\t\treturn beijingTime.toISOString().replace('Z', '+08:00');\n\t\t\t},\n\n\t\t\t// 格式化时间显示\n\t\t\tformatTime(timeStr) {\n\t\t\t\tif (!timeStr) return '暂无数据';\n\n\t\t\t\ttry {\n\t\t\t\t\t// 解析 ISO 8601 时间字符串\n\t\t\t\t\tconst date = new Date(timeStr);\n\t\t\t\t\t// 格式化为本地时间字符串\n\t\t\t\t\treturn date.toLocaleString('zh-CN', {\n\t\t\t\t\t\tyear: 'numeric',\n\t\t\t\t\t\tmonth: '2-digit',\n\t\t\t\t\t\tday: '2-digit',\n\t\t\t\t\t\thour: '2-digit',\n\t\t\t\t\t\tminute: '2-digit',\n\t\t\t\t\t\tsecond: '2-digit',\n\t\t\t\t\t\thour12: false\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('时间格式化失败:', e);\n\t\t\t\t\treturn timeStr;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 处理相关键盘字段的数据\n\t\t\tgetRelatedKeyboards(keyboards) {\n\t\t\t\tif (!keyboards || !Array.isArray(keyboards) || keyboards.length === 0) {\n\t\t\t\t\treturn '--'\n\t\t\t\t}\n\t\t\t\treturn keyboards.join(', ')\n\t\t\t},\n\n\t\t\t// 处理轮播图切换\n\t\t\thandleSwiperChange(e) {\n\t\t\t\tthis.currentImageIndex = e.detail.current\n\t\t\t},\n\n\t\t\t// 压缩图片\n\t\t\tasync compressImage(tempFilePath) {\n\t\t\t\ttry {\n\t\t\t\t\tconsole.log('开始压缩图片:', tempFilePath);\n\n\t\t\t\t\t// 检查图片格式\n\t\t\t\t\tconst ext = tempFilePath.split('.').pop().toLowerCase();\n\t\t\t\t\tconsole.log('图片格式:', ext);\n\n\t\t\t\t\t// 获取文件系统管理器\n\t\t\t\t\tconst fs = wx.getFileSystemManager();\n\n\t\t\t\t\t// 检查文件路径是否有效\n\t\t\t\t\tif (!tempFilePath || typeof tempFilePath !== 'string') {\n\t\t\t\t\t\tthrow new Error('无效的文件路径');\n\t\t\t\t\t}\n\n\t\t\t\t\t// 先获取图片信息\n\t\t\t\t\tconsole.log('准备获取图片信息...');\n\t\t\t\t\tconst imageInfo = await new Promise((resolve, reject) => {\n\t\t\t\t\t\twx.getImageInfo({\n\t\t\t\t\t\t\tsrc: tempFilePath,\n\t\t\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\t\t\tconsole.log('获取图片信息成功:', res);\n\t\t\t\t\t\t\t\tresolve(res);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfail: (error) => {\n\t\t\t\t\t\t\t\tconsole.error('获取图片信息失败:', error);\n\t\t\t\t\t\t\t\treject(new Error('获取图片信息失败'));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log('原始图片信息:', imageInfo);\n\n\t\t\t\t\t// 获取原始图片大小\n\t\t\t\t\tconst originalFileInfo = await new Promise((resolve, reject) => {\n\t\t\t\t\t\tfs.getFileInfo({\n\t\t\t\t\t\t\tfilePath: tempFilePath,\n\t\t\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\t\t\tconsole.log('获取文件大小成功:', res);\n\t\t\t\t\t\t\t\tresolve(res);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfail: reject\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tconst originalSize = (originalFileInfo.size / 1024).toFixed(2);\n\t\t\t\t\tconsole.log(`原始图片大小: ${originalSize}KB, 尺寸: ${imageInfo.width}x${imageInfo.height}`);\n\n\t\t\t\t\t// 计算压缩后的尺寸\n\t\t\t\t\tlet targetWidth = imageInfo.width;\n\t\t\t\t\tlet targetHeight = imageInfo.height;\n\t\t\t\t\tconst maxSize = 1024; // 设置最大边长为1024px\n\t\t\t\t\tconst minSize = 800; // 设置最小边长为800px\n\t\t\t\t\tconst quality = 50; // 降低质量以减小文件大小\n\n\t\t\t\t\t// 计算缩放比例\n\t\t\t\t\tlet scale = 1;\n\n\t\t\t\t\t// 如果图片太大，需要缩小\n\t\t\t\t\tif (targetWidth > maxSize || targetHeight > maxSize) {\n\t\t\t\t\t\t// 找出最大的边，计算缩放比例\n\t\t\t\t\t\tconst maxDimension = Math.max(targetWidth, targetHeight);\n\t\t\t\t\t\tscale = maxSize / maxDimension;\n\t\t\t\t\t\tconsole.log('图片需要缩小，缩放比例:', scale);\n\t\t\t\t\t}\n\n\t\t\t\t\t// 如果图片太小，需要放大\n\t\t\t\t\tif (targetWidth < minSize && targetHeight < minSize) {\n\t\t\t\t\t\t// 找出最小的边，计算放大比例\n\t\t\t\t\t\tconst minDimension = Math.min(targetWidth, targetHeight);\n\t\t\t\t\t\tscale = minSize / minDimension;\n\t\t\t\t\t\tconsole.log('图片需要放大，缩放比例:', scale);\n\t\t\t\t\t}\n\n\t\t\t\t\t// 应用缩放\n\t\t\t\t\tif (scale !== 1) {\n\t\t\t\t\t\ttargetWidth = Math.round(targetWidth * scale);\n\t\t\t\t\t\ttargetHeight = Math.round(targetHeight * scale);\n\t\t\t\t\t\tconsole.log('应用缩放后的尺寸:', {\n\t\t\t\t\t\t\twidth: targetWidth,\n\t\t\t\t\t\t\theight: targetHeight,\n\t\t\t\t\t\t\tscale: scale\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.log('计算后的尺寸:', { width: targetWidth, height: targetHeight });\n\n\t\t\t\t\t// 使用微信小程序的压缩API\n\t\t\t\t\tconst compressedPath = await new Promise((resolve, reject) => {\n\t\t\t\t\t\twx.compressImage({\n\t\t\t\t\t\t\tsrc: tempFilePath,\n\t\t\t\t\t\t\tquality: quality,\n\t\t\t\t\t\t\tcompressedWidth: targetWidth,\n\t\t\t\t\t\t\tcompressHeight: targetHeight,\n\t\t\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\t\t\tconsole.log('压缩图片成功:', res);\n\t\t\t\t\t\t\t\tresolve(res);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfail: reject\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t// 获取压缩后的图片信息\n\t\t\t\t\tconst compressedInfo = await new Promise((resolve, reject) => {\n\t\t\t\t\t\twx.getImageInfo({\n\t\t\t\t\t\t\tsrc: compressedPath.tempFilePath,\n\t\t\t\t\t\t\tsuccess: resolve,\n\t\t\t\t\t\t\tfail: reject\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t// 获取压缩后的文件大小\n\t\t\t\t\tconst finalFileInfo = await new Promise((resolve, reject) => {\n\t\t\t\t\t\tfs.getFileInfo({\n\t\t\t\t\t\t\tfilePath: compressedPath.tempFilePath,\n\t\t\t\t\t\t\tsuccess: resolve,\n\t\t\t\t\t\t\tfail: reject\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tconst compressedSize = (finalFileInfo.size / 1024).toFixed(2);\n\t\t\t\t\tconsole.log(`压缩完成:\n\t\t\t\t\t\t原始大小: ${originalSize}KB (${imageInfo.width}x${imageInfo.height})\n\t\t\t\t\t\t压缩后大小: ${compressedSize}KB (${compressedInfo.width}x${compressedInfo.height})\n\t\t\t\t\t\t压缩率: ${((1 - finalFileInfo.size / originalFileInfo.size) * 100).toFixed(2)}%\n\t\t\t\t\t`);\n\n\t\t\t\t\treturn compressedPath.tempFilePath;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('压缩图片失败:', e);\n\t\t\t\t\treturn tempFilePath;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 生成图片文件名\n\t\t\tgetImageFileName(type = 'detail', originalExt = 'jpg') {\n\t\t\t\t// 优先使用英文名，如果没有则使用中文名\n\t\t\t\tlet switchName = this.switchData.switch_name_en || this.switchData.switch_name || 'unknown';\n\n\t\t\t\t// 移除特殊字符，只保留字母、数字、下划线\n\t\t\t\tconst safeSwitchName = switchName\n\t\t\t\t\t.replace(/\\s+/g, '_')\n\t\t\t\t\t.replace(/[^a-zA-Z0-9_]/g, '')\n\t\t\t\t\t.replace(/_+/g, '_')\n\t\t\t\t\t.replace(/^_|_$/g, '');\n\n\t\t\t\t// 生成格式化的时间字符串：YYYYMMDD_HHMMSS\n\t\t\t\tconst now = new Date();\n\t\t\t\tconst timeString = now.getFullYear() +\n\t\t\t\t\tString(now.getMonth() + 1).padStart(2, '0') +\n\t\t\t\t\tString(now.getDate()).padStart(2, '0') + '_' +\n\t\t\t\t\tString(now.getHours()).padStart(2, '0') +\n\t\t\t\t\tString(now.getMinutes()).padStart(2, '0') +\n\t\t\t\t\tString(now.getSeconds()).padStart(2, '0');\n\n\t\t\t\t// 生成随机字符串，避免文件名冲突\n\t\t\t\tconst random = Math.random().toString(36).substring(2, 8);\n\n\t\t\t\t// 如果是其他视图类型，添加序号\n\t\t\t\tlet typePrefix = '';\n\t\t\t\tif (type === 'other') {\n\t\t\t\t\t// 获取当前其他视图的数量\n\t\t\t\t\tconst otherViewCount = this.switchImages.filter(img => img.type === 'other').length;\n\t\t\t\t\t// 序号从1开始\n\t\t\t\t\ttypePrefix = `other${otherViewCount + 1}`;\n\t\t\t\t} else {\n\t\t\t\t\t// 其他类型使用原有的前缀\n\t\t\t\t\tconst prefixMap = {\n\t\t\t\t\t\tdetail: 'detail',\n\t\t\t\t\t\ttop: 'top',\n\t\t\t\t\t\tstem: 'stem',\n\t\t\t\t\t\tspring: 'spring',\n\t\t\t\t\t\tbottom: 'bottom',\n\t\t\t\t\t\tside: 'side',\n\t\t\t\t\t\thousing: 'housing'\n\t\t\t\t\t};\n\t\t\t\t\ttypePrefix = prefixMap[type] || 'other1';\n\t\t\t\t}\n\n\t\t\t\t// 构建文件名：轴体名_类型_时间_随机码.jpg\n\t\t\t\treturn `${safeSwitchName}_${typePrefix}_${timeString}_${random}.${originalExt}`;\n\t\t\t},\n\n\t\t\t// 从文件名解析图片类型\n\t\t\tgetTypeFromFileName(fileName) {\n\t\t\t\tif (!fileName) return 'detail';\n\n\t\t\t\t// 解析文件名中的类型标识\n\t\t\t\tconst typeMatches = {\n\t\t\t\t\t'detail': 'detail',\n\t\t\t\t\t'top': 'top',\n\t\t\t\t\t'stem': 'stem',\n\t\t\t\t\t'spring': 'spring',\n\t\t\t\t\t'bottom': 'bottom',\n\t\t\t\t\t'side': 'side',\n\t\t\t\t\t'housing': 'housing',\n\t\t\t\t\t'other1': 'other',\n\t\t\t\t\t'other2': 'other',\n\t\t\t\t\t'other3': 'other'\n\t\t\t\t};\n\n\t\t\t\t// 遍历所有可能的类型标识\n\t\t\t\tfor (const [typeId, type] of Object.entries(typeMatches)) {\n\t\t\t\t\tif (fileName.includes(`_${typeId}_`)) {\n\t\t\t\t\t\treturn type;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// 兼容旧的缩写格式\n\t\t\t\tconst legacyMatches = {\n\t\t\t\t\t'_dt_': 'detail',\n\t\t\t\t\t'_tp_': 'top',\n\t\t\t\t\t'_st_': 'stem',\n\t\t\t\t\t'_sp_': 'spring',\n\t\t\t\t\t'_bt_': 'bottom',\n\t\t\t\t\t'_sd_': 'side',\n\t\t\t\t\t'_hs_': 'housing',\n\t\t\t\t\t'_ot1_': 'other',\n\t\t\t\t\t'_ot2_': 'other',\n\t\t\t\t\t'_ot3_': 'other'\n\t\t\t\t};\n\n\t\t\t\t// 遍历所有旧格式的类型标识\n\t\t\t\tfor (const [typeId, type] of Object.entries(legacyMatches)) {\n\t\t\t\t\tif (fileName.includes(typeId)) {\n\t\t\t\t\t\treturn type;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// 默认返回详情图类型\n\t\t\t\treturn 'detail';\n\t\t\t},\n\n\t\t\t// 处理添加图片\n\t\t\tasync handleAddImage() {\n\t\t\t\ttry {\n\t\t\t\t\t// 选择图片\n\t\t\t\t\tconst res = await uni.chooseImage({\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\tsizeType: ['compressed'],\n\t\t\t\t\t\tsourceType: ['album', 'camera']\n\t\t\t\t\t});\n\n\t\t\t\t\t// 如果用户取消选择，直接返回\n\t\t\t\t\tif (!res || !res.tempFilePaths || !res.tempFilePaths.length) {\n\t\t\t\t\t\tconsole.log('用户取消选择图片');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// 显示加载提示\n\t\t\t\t\tuni.showLoading({\n\t\t\t\t\t\ttitle: '处理中...',\n\t\t\t\t\t\tmask: true\n\t\t\t\t\t});\n\n\t\t\t\t\t// 压缩图片\n\t\t\t\t\tconst compressedPath = await this.compressImage(res.tempFilePaths[0]);\n\n\t\t\t\t\t// 生成文件名\n\t\t\t\t\tconst fileName = this.getImageFileName('detail', compressedPath.split('.').pop());\n\n\t\t\t\t\t// 上传图片\n\t\t\t\t\tconst uploadRes = await uniCloud.uploadFile({\n\t\t\t\t\t\tfilePath: compressedPath,\n\t\t\t\t\t\tcloudPath: fileName\n\t\t\t\t\t});\n\n\t\t\t\t\t// 添加到图片数组\n\t\t\t\t\tconst imageInfo = {\n\t\t\t\t\t\tfileID: uploadRes.fileID,\n\t\t\t\t\t\ttype: 'detail',\n\t\t\t\t\t\tfileName: fileName,\n\t\t\t\t\t\tuploadTime: this.getBeiJingISOString(),\n\t\t\t\t\t\tupdateTime: this.getBeiJingISOString()\n\t\t\t\t\t};\n\n\t\t\t\t\t// 更新数据库\n\t\t\t\t\tawait this.updateSwitchImage(imageInfo);\n\n\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '添加成功',\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// 用户取消选择图片时不显示错误提示\n\t\t\t\t\tif (e.errMsg === 'chooseImage:fail cancel') {\n\t\t\t\t\t\tconsole.log('用户取消选择图片');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.error('添加图片失败:', e);\n\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: e.message || '添加失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 删除云存储中的文件\n\t\t\tasync deleteCloudFile(fileID) {\n\t\t\t\tif (!fileID || fileID.includes('default_switch.webp')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'switchApi',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'deleteCloudFile',\n\t\t\t\t\t\t\tfileList: [fileID]\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (result.result.errCode === 0) {\n\t\t\t\t\t\tconsole.log('文件删除成功:', fileID, result);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(result.result.errMsg);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('文件删除失败:', error);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 处理编辑图片\n\t\t\tasync handleEditConfirm() {\n\t\t\t\ttry {\n\t\t\t\t\t// 选择图片\n\t\t\t\t\tconst res = await new Promise((resolve, reject) => {\n\t\t\t\t\t\twx.chooseImage({\n\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\tsizeType: ['original', 'compressed'],\n\t\t\t\t\t\t\tsourceType: ['album', 'camera'],\n\t\t\t\t\t\t\tsuccess: resolve,\n\t\t\t\t\t\t\tfail: (error) => {\n\t\t\t\t\t\t\t\t// 用户取消选择时不显示错误提示\n\t\t\t\t\t\t\t\tif (error.errMsg.includes('cancel')) {\n\t\t\t\t\t\t\t\t\treject(new Error('cancel'));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tconst tempFilePath = res.tempFilePaths[0];\n\t\t\t\t\tconsole.log('选择的图片:', tempFilePath);\n\n\t\t\t\t\t// 压缩图片\n\t\t\t\t\tconst compressedPath = await this.compressImage(tempFilePath);\n\n\t\t\t\t\t// 获取原始文件扩展名\n\t\t\t\t\tconst originalExt = 'jpg'; // 统一使用 jpg 格式\n\n\t\t\t\t\t// 使用规范的文件命名\n\t\t\t\t\tconst fileName = this.getImageFileName('detail', originalExt);\n\t\t\t\t\tconst cloudPath = fileName;\n\n\t\t\t\t\tuni.showLoading({ title: '上传中...' });\n\n\t\t\t\t\t// 保存旧图片的 fileID，用于后续删除\n\t\t\t\t\tconst oldFileID = this.switchImages[this.currentImageIndex].fileID;\n\n\t\t\t\t\t// 上传新图片\n\t\t\t\t\tconst uploadResult = await uniCloud.uploadFile({\n\t\t\t\t\t\tfilePath: compressedPath,\n\t\t\t\t\t\tcloudPath\n\t\t\t\t\t});\n\n\t\t\t\t\t// 如果存在旧图片且不是默认图片，则删除\n\t\t\t\t\tawait this.deleteCloudFile(oldFileID);\n\n\t\t\t\t\t// 构建新的图片信息对象\n\t\t\t\t\tconst imageInfo = {\n\t\t\t\t\t\tfileID: uploadResult.fileID,\n\t\t\t\t\t\ttype: this.switchImages[this.currentImageIndex].type,\n\t\t\t\t\t\tfileName: fileName,\n\t\t\t\t\t\tuploadTime: this.getBeiJingISOString(),\n\t\t\t\t\t\tupdateTime: this.getBeiJingISOString()\n\t\t\t\t\t};\n\n\t\t\t\t\t// 更新数据库\n\t\t\t\t\tconst { result: updateResult } = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'switchApi',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'updateSwitchImage',\n\t\t\t\t\t\t\tswitchId: this.switchData._id,\n\t\t\t\t\t\t\timageIndex: this.currentImageIndex,\n\t\t\t\t\t\t\timageInfo: imageInfo\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// 检查返回结果\n\t\t\t\t\tif (!updateResult || updateResult.errCode !== 0) {\n\t\t\t\t\t\tthrow new Error(updateResult?.errMsg || '更新失败');\n\t\t\t\t\t}\n\n\t\t\t\t\t// 更新本地数据\n\t\t\t\t\tthis.$set(this.switchImages, this.currentImageIndex, imageInfo);\n\t\t\t\t\tthis.switchData.preview_images = this.switchImages;\n\n\t\t\t\t\t// 强制更新视图\n\t\t\t\t\tthis.$forceUpdate();\n\n\t\t\t\t\tuni.showToast({ title: '更换成功' });\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// 用户取消选择时不显示错误提示\n\t\t\t\t\tif (e.message === 'cancel') {\n\t\t\t\t\t\tconsole.log('用户取消选择图片');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.error('编辑图片失败:', e);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '编辑图片失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t} finally {\n\t\t\t\t\tuni.hideLoading();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 处理删除图片\n\t\t\tasync handleDeleteImage() {\n\t\t\t\ttry {\n\t\t\t\t\tconsole.log('开始删除图片操作');\n\t\t\t\t\t// 获取当前图片信息\n\t\t\t\t\tconst currentImage = this.switchImages[this.currentImageIndex];\n\t\t\t\t\tconsole.log('当前图片信息:', currentImage);\n\n\t\t\t\t\t// 如果是默认图片，不允许删除\n\t\t\t\t\tif (!currentImage.fileID) {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '默认图片不能删除',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// 确认删除\n\t\t\t\t\tconst confirmRes = await uni.showModal({\n\t\t\t\t\t\ttitle: '确认删除',\n\t\t\t\t\t\tcontent: '确定要删除这张图片吗？',\n\t\t\t\t\t\tconfirmText: '删除',\n\t\t\t\t\t\tconfirmColor: '#f44336'\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!confirmRes.confirm) {\n\t\t\t\t\t\tconsole.log('用户取消删除');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.log('准备调用云函数删除图片:', {\n\t\t\t\t\t\tswitchId: this.switchData._id,\n\t\t\t\t\t\timageIndex: this.currentImageIndex,\n\t\t\t\t\t\tfileID: currentImage.fileID\n\t\t\t\t\t});\n\n\t\t\t\t\t// 调用云函数删除图片\n\t\t\t\t\tconst { result } = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'switchApi',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'deleteSwitchImage',\n\t\t\t\t\t\t\tswitchId: this.switchData._id,\n\t\t\t\t\t\t\timageIndex: this.currentImageIndex,\n\t\t\t\t\t\t\tfileID: currentImage.fileID\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tconsole.log('云函数返回结果:', result);\n\n\t\t\t\t\t// 检查返回结果\n\t\t\t\t\tif (!result || result.errCode !== 0) {\n\t\t\t\t\t\tthrow new Error(result?.errMsg || '删除失败');\n\t\t\t\t\t}\n\n\t\t\t\t\t// 创建新的数组引用\n\t\t\t\t\tconst newImages = [...this.switchImages];\n\t\t\t\t\tnewImages.splice(this.currentImageIndex, 1);\n\n\t\t\t\t\t// 更新数据\n\t\t\t\t\tthis.switchImages = newImages;\n\t\t\t\t\tthis.switchData.preview_images = newImages;\n\n\t\t\t\t\t// 如果删除后还有图片，调整当前索引\n\t\t\t\t\tif (this.switchImages.length > 0) {\n\t\t\t\t\t\tthis.currentImageIndex = Math.min(this.currentImageIndex, this.switchImages.length - 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.currentImageIndex = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// 关闭编辑模式\n\t\t\t\t\tthis.isEditing = false;\n\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '删除成功',\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('删除图片失败:', e);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: e.message || '删除失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 处理图片加载错误\n\t\t\thandleImageError(index) {\n\t\t\t\tconsole.error('图片加载失败:', index, {\n\t\t\t\t\tfileID: this.switchImages[index].fileID,\n\t\t\t\t\ttype: this.switchImages[index].type\n\t\t\t\t});\n\t\t\t\t// 将错误图片替换为默认图片\n\t\t\t\tif (this.switchImages[index]) {\n\t\t\t\t\tthis.$set(this.switchImages[index], 'fileID', '/static/default_switch.webp')\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 开始编辑图片\n\t\t\tstartEditing() {\n\t\t\t\tif (!this.switchImages.length) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '暂无图片',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.isEditing = true;\n\t\t\t},\n\n\t\t\t// 处理触发区域点击\n\t\t\thandleTriggerTap() {\n\t\t\t\tthis.triggerCount++;\n\t\t\t\tif (this.triggerCount >= 5) {\n\t\t\t\t\tthis.triggerCount = 0;\n\t\t\t\t\tthis.isEditing = true;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 切换到上一张图片\n\t\t\thandlePrevImage() {\n\t\t\t\tif (this.switchImages.length <= 1) return;\n\t\t\t\tthis.currentImageIndex = (this.currentImageIndex - 1 + this.switchImages.length) % this.switchImages.length;\n\t\t\t},\n\n\t\t\t// 切换到下一张图片\n\t\t\thandleNextImage() {\n\t\t\t\tif (this.switchImages.length <= 1) return;\n\t\t\t\tthis.currentImageIndex = (this.currentImageIndex + 1) % this.switchImages.length;\n\t\t\t},\n\n\t\t\t// 点击指示器切换图片\n\t\t\thandleIndicatorTap(index) {\n\t\t\t\tthis.currentImageIndex = index;\n\t\t\t},\n\n\t\t\t// 获取图片类型文本\n\t\t\tgetImageTypeText(type) {\n\t\t\t\tconst option = this.imageTypeOptions.find(opt => opt.value === type)\n\t\t\t\t// 如果找不到对应的类型，返回类型值本身\n\t\t\t\treturn option ? option.text : type\n\t\t\t},\n\n\t\t\t// 处理类型选择\n\t\t\tasync handleTypeChange(e) {\n\t\t\t\tconst selectedType = this.imageTypeOptions[e.detail.value].value;\n\t\t\t\tconst currentImage = this.switchImages[this.currentImageIndex];\n\n\t\t\t\ttry {\n\t\t\t\t\t// 更新图片信息\n\t\t\t\t\tconst imageInfo = {\n\t\t\t\t\t\t...currentImage,\n\t\t\t\t\t\ttype: selectedType,\n\t\t\t\t\t\tupdateTime: this.getBeiJingISOString()\n\t\t\t\t\t};\n\n\t\t\t\t\t// 调用云函数更新数据库\n\t\t\t\t\tconst { result } = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'switchApi',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'updateSwitchImage',\n\t\t\t\t\t\t\tswitchId: this.switchData._id,\n\t\t\t\t\t\t\timageIndex: this.currentImageIndex,\n\t\t\t\t\t\t\timageInfo: imageInfo\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!result || result.errCode !== 0) {\n\t\t\t\t\t\tthrow new Error(result?.errMsg || '更新失败');\n\t\t\t\t\t}\n\n\t\t\t\t\t// 更新本地数据\n\t\t\t\t\tthis.$set(this.switchImages, this.currentImageIndex, imageInfo);\n\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '类型修改成功',\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('修改图片类型失败:', e);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: e.message || '修改失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 获取图片类型索引\n\t\t\tgetTypeIndex(type) {\n\t\t\t\treturn this.imageTypeOptions.findIndex(option => option.value === type);\n\t\t\t},\n\n\t\t\t// 添加通过 ID 加载数据的方法\n\t\t\tasync loadSwitchData(id) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.isLoading = true;\n\t\t\t\t\tconst { result } = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'switchApi',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'getSwitchById',\n\t\t\t\t\t\t\tid: id\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (result.errCode === 0 && result.data) {\n\t\t\t\t\t\tthis.switchData = result.data;\n\n\t\t\t\t\t\t// 处理图片数据\n\t\t\t\t\t\tif (Array.isArray(this.switchData.preview_images)) {\n\t\t\t\t\t\t\tthis.switchImages = [...this.switchData.preview_images];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.switchImages = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// 数据加载完成后检查收藏状态\n\t\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\t\tthis.checkFavoriteStatus();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '获取数据失败',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('加载轴体数据失败:', e);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '加载失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t} finally {\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 处理图片点击预览\n\t\t\tasync handleImageTap(index) {\n\t\t\t\t// 如果正在编辑模式，不进行预览\n\t\t\t\tif (this.isEditing) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\t// 过滤有效的图片URL\n\t\t\t\t\tconst urls = this.switchImages\n\t\t\t\t\t\t.filter(img => img.fileID && img.fileID !== '/static/default_switch.webp')\n\t\t\t\t\t\t.map(img => img.fileID);\n\n\t\t\t\t\t// 如果没有有效的图片URL\n\t\t\t\t\tif (urls.length === 0) {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '无可预览图片',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// 获取当前图片的URL\n\t\t\t\t\tconst currentFileID = this.switchImages[index].fileID;\n\n\t\t\t\t\t// 使用微信的预览图片API\n\t\t\t\t\twx.previewImage({\n\t\t\t\t\t\tcurrent: currentFileID, // 当前显示图片的URL\n\t\t\t\t\t\turls: urls, // 所有图片的URL列表\n\t\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\t\tconsole.log('预览图片成功');\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfail: (error) => {\n\t\t\t\t\t\t\tconsole.error('预览图片失败:', error);\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '预览失败',\n\t\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('处理图片预览失败:', error);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: error.message || '预览失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 处理设置主图\n\t\t\tasync handleSetMainImage() {\n\t\t\t\ttry {\n\t\t\t\t\t// 获取当前图片的索引\n\t\t\t\t\tconst currentIndex = this.currentImageIndex;\n\n\t\t\t\t\t// 获取所有图片\n\t\t\t\t\tconst allImages = this.switchImages;\n\n\t\t\t\t\t// 如果当前图片是主图，不需要设置\n\t\t\t\t\tif (currentIndex === 0) {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '已经是主图',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// 确认设置\n\t\t\t\t\tconst confirmRes = await uni.showModal({\n\t\t\t\t\t\ttitle: '设为主图',\n\t\t\t\t\t\tcontent: '确定要将当前图片设为主图吗？',\n\t\t\t\t\t\tconfirmText: '确定',\n\t\t\t\t\t\tconfirmColor: '#4CAF50'\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!confirmRes.confirm) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// 将当前图片设置为主图\n\t\t\t\t\tconst currentImage = allImages[currentIndex];\n\t\t\t\t\t// 创建新的图片数组\n\t\t\t\t\tconst newImages = [...allImages];\n\t\t\t\t\t// 移除当前图片\n\t\t\t\t\tnewImages.splice(currentIndex, 1);\n\t\t\t\t\t// 将当前图片插入到数组开头\n\t\t\t\t\tnewImages.unshift({\n\t\t\t\t\t\t...currentImage,\n\t\t\t\t\t\ttype: 'detail',\n\t\t\t\t\t\tupdateTime: this.getBeiJingISOString()\n\t\t\t\t\t});\n\n\t\t\t\t\t// 更新数据库\n\t\t\t\t\tconst { result: updateResult } = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'switchApi',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'updateSwitchImages',\n\t\t\t\t\t\t\tswitchId: this.switchData._id,\n\t\t\t\t\t\t\timages: newImages\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!updateResult || updateResult.errCode !== 0) {\n\t\t\t\t\t\tthrow new Error(updateResult?.errMsg || '设置失败');\n\t\t\t\t\t}\n\n\t\t\t\t\t// 更新本地数据\n\t\t\t\t\tthis.switchImages = newImages;\n\t\t\t\t\tthis.switchData.preview_images = [...this.switchImages];\n\t\t\t\t\t// 更新当前索引为0（主图位置）\n\t\t\t\t\tthis.currentImageIndex = 0;\n\n\t\t\t\t\t// 强制更新视图\n\t\t\t\t\tthis.$forceUpdate();\n\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '设置成功',\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('设置主图失败:', e);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '设置失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 获取审核状态文本\n\t\t\tgetAuditStatusText(status) {\n\t\t\t\treturn AUDIT_STATUS_MAP[status] || '未审核';\n\t\t\t},\n\n\t\t\t// 处理收藏按钮点击\n\t\t\tasync handleFavorite() {\n\t\t\t\tconst app = getApp();\n\n\t\t\t\t// 检查是否已登录\n\t\t\t\tif (!app.globalData.userInfo?.openid) {\n\t\t\t\t\tconsole.log('用户未登录');\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '请先登录',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tconst { result } = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'switchApi',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'toggleFavorite',\n\t\t\t\t\t\t\tswitchId: this.switchData._id,\n\t\t\t\t\t\t\topenid: app.globalData.userInfo.openid\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (result.errCode === 0) {\n\t\t\t\t\t\tthis.isFavorited = result.isFavorited;\n\n\t\t\t\t\t\t// 更新全局收藏数据\n\t\t\t\t\t\tif (result.isFavorited) {\n\t\t\t\t\t\t\t// 添加到收藏\n\t\t\t\t\t\t\tapp.globalData.favorites.push({\n\t\t\t\t\t\t\t\tswitchId: this.switchData._id,\n\t\t\t\t\t\t\t\tcreateTime: new Date()\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconsole.log('添加到全局收藏:', this.switchData._id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 从收藏中移除\n\t\t\t\t\t\t\tconst index = app.globalData.favorites.findIndex(item => item.switchId === this.switchData._id);\n\t\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\t\tapp.globalData.favorites.splice(index, 1);\n\t\t\t\t\t\t\t\tconsole.log('从全局收藏中移除:', this.switchData._id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: result.isFavorited ? '收藏成功' : '已取消收藏',\n\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: result.errMsg || '操作失败',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('收藏操作失败:', e);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '操作失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 检查收藏状态\n\t\t\tasync checkFavoriteStatus() {\n\t\t\t\tconst app = getApp();\n\t\t\t\tif (!app.globalData.userInfo?.openid || !this.switchData._id) return;\n\n\t\t\t\t// 首先检查全局收藏数据\n\t\t\t\tif (app.globalData.favorites && app.globalData.favorites.length > 0) {\n\t\t\t\t\tconst found = app.globalData.favorites.some(item => item.switchId === this.switchData._id);\n\t\t\t\t\tif (found) {\n\t\t\t\t\t\tthis.isFavorited = true;\n\t\t\t\t\t\tconsole.log('从全局数据中确认已收藏');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tconst { result } = await uniCloud.callFunction({\n\t\t\t\t\t\tname: 'switchApi',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'checkFavorite',\n\t\t\t\t\t\t\tswitchId: this.switchData._id,\n\t\t\t\t\t\t\topenid: app.globalData.userInfo.openid\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (result.errCode === 0) {\n\t\t\t\t\t\tthis.isFavorited = result.isFavorited;\n\t\t\t\t\t\tconsole.log('收藏状态:', this.isFavorited);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('检查收藏状态失败:', e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style lang=\"scss\">\n\t.container {\n\t\tmin-height: 100vh;\n\t\tbackground-color: #f5f5f5;\n\t}\n\n\t.swiper {\n\t\theight: 300px;\n\t\tbackground-color: #fff;\n\n\t\t.swiper-item {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tbackground-color: #fff;\n\n\t\t\t.image-wrapper {\n\t\t\t\tposition: relative;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\talign-items: center;\n\n\t\t\t\t.image-type-tag {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 10px;\n\t\t\t\t\tright: 10px;\n\t\t\t\t\tbackground-color: rgba(0, 0, 0, 0.6);\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\tpadding: 4px 8px;\n\t\t\t\t\tborder-radius: 4px;\n\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\tz-index: 2;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tgap: 4px;\n\t\t\t\t\tcursor: pointer;\n\n\t\t\t\t\t&:active {\n\t\t\t\t\t\topacity: 0.8;\n\t\t\t\t\t}\n\n\t\t\t\t\t.edit-icon {\n\t\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\t\tmargin-left: 4px;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.switch-image {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tobject-fit: contain;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t.info-list {\n\t\tmargin-top: 10px;\n\n\t\t:deep(.uni-list-item) {\n\t\t\t.uni-list-item__container {\n\t\t\t\tflex: 1;\n\t\t\t\tflex-direction: row;\n\t\t\t\tpadding: 12px 15px;\n\t\t\t}\n\n\t\t\t.uni-list-item__content {\n\t\t\t\tflex: none;\n\t\t\t\twidth: 100px;\n\t\t\t}\n\n\t\t\t.uni-list-item__content-title {\n\t\t\t\tfont-size: 14px;\n\t\t\t\tcolor: #666;\n\t\t\t\twhite-space: nowrap;\n\t\t\t}\n\n\t\t\t.uni-list-item__extra {\n\t\t\t\tflex: 1;\n\t\t\t\toverflow: visible;\n\t\t\t\talign-items: flex-end;\n\t\t\t}\n\n\t\t\t.uni-list-item__extra-text {\n\t\t\t\tfont-size: 14px;\n\t\t\t\tcolor: #333;\n\t\t\t\ttext-align: right;\n\t\t\t\twhite-space: normal;\n\t\t\t\tword-break: break-all;\n\t\t\t\tline-height: 1.4;\n\t\t\t\twidth: 100%;\n\t\t\t\tpadding-left: 15px;\n\t\t\t\tpadding-right: 15px;\n\t\t\t}\n\t\t}\n\t}\n\n\t.image-manage-trigger {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tright: 0;\n\t\twidth: 50px;\n\t\theight: 50px;\n\t\tz-index: 100;\n\n\t\t&:active {\n\t\t\tbackground-color: rgba(255, 0, 0, 0.1);\n\t\t}\n\t}\n\n\t.empty-image {\n\t\twidth: 100%;\n\t\theight: 200px;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tbackground-color: #f5f5f5;\n\t\tmargin-bottom: 15px;\n\t\tcolor: #999;\n\t}\n\n\t.edit-overlay {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tbackground-color: rgba(0, 0, 0, 0.7);\n\t\tz-index: 1000;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\n\t\t.edit-container {\n\t\t\tbackground-color: #fff;\n\t\t\tborder-radius: 8px;\n\t\t\twidth: 90%;\n\t\t\tmax-width: 600px;\n\t\t\tpadding: 20px;\n\n\t\t\t.edit-header {\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: space-between;\n\t\t\t\talign-items: center;\n\t\t\t\tmargin-bottom: 15px;\n\n\t\t\t\t.edit-title {\n\t\t\t\t\tfont-size: 16px;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t}\n\n\t\t\t\t.close-btn {\n\t\t\t\t\tfont-size: 24px;\n\t\t\t\t\tcolor: #999;\n\t\t\t\t\tpadding: 0 10px;\n\t\t\t\t\tcursor: pointer;\n\n\t\t\t\t\t&:active {\n\t\t\t\t\t\topacity: 0.7;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.edit-image-container {\n\t\t\t\tposition: relative;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 200px;\n\t\t\t\tmargin-bottom: 15px;\n\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\n\t\t\t\t.type-selector {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 10px;\n\t\t\t\t\tright: 10px;\n\t\t\t\t\tz-index: 2;\n\n\t\t\t\t\t.picker-content {\n\t\t\t\t\t\tbackground-color: rgba(0, 0, 0, 0.6);\n\t\t\t\t\t\tcolor: #fff;\n\t\t\t\t\t\tpadding: 4px 8px;\n\t\t\t\t\t\tborder-radius: 4px;\n\t\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\tgap: 4px;\n\t\t\t\t\t\tmin-width: 50px;\n\t\t\t\t\t\theight: 18px;\n\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t}\n\n\t\t\t\t\t&:active {\n\t\t\t\t\t\topacity: 0.8;\n\t\t\t\t\t}\n\n\t\t\t\t\t.picker-arrow {\n\t\t\t\t\t\tfont-size: 12px;\n\t\t\t\t\t\tmargin-left: 4px;\n\t\t\t\t\t\tcolor: #fff;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.nav-btn {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 50%;\n\t\t\t\t\ttransform: translateY(-50%);\n\t\t\t\t\twidth: 40px;\n\t\t\t\t\theight: 40px;\n\t\t\t\t\tbackground-color: rgba(0, 0, 0, 0.5);\n\t\t\t\t\tborder-radius: 50%;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tz-index: 1;\n\n\t\t\t\t\t&.prev {\n\t\t\t\t\t\tleft: 10px;\n\t\t\t\t\t}\n\n\t\t\t\t\t&.next {\n\t\t\t\t\t\tright: 10px;\n\t\t\t\t\t}\n\n\t\t\t\t\t.nav-icon {\n\t\t\t\t\t\tcolor: #fff;\n\t\t\t\t\t\tfont-size: 24px;\n\t\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\t}\n\n\t\t\t\t\t&:active {\n\t\t\t\t\t\tbackground-color: rgba(0, 0, 0, 0.7);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.edit-image {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tobject-fit: contain;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.edit-buttons {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tgap: 12px;\n\n\t\t\t\t.btn-row {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tgap: 10px;\n\n\t\t\t\t\t.btn {\n\t\t\t\t\t\tflex: 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.btn {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t\tfont-size: 14px;\n\t\t\t\t\theight: 40px;\n\t\t\t\t\tline-height: 40px;\n\n\t\t\t\t\t&.add {\n\t\t\t\t\t\tbackground-color: #4CAF50;\n\t\t\t\t\t}\n\n\t\t\t\t\t&.delete {\n\t\t\t\t\t\tbackground-color: #f44336;\n\t\t\t\t\t}\n\n\t\t\t\t\t&.cancel {\n\t\t\t\t\t\tbackground-color: #999;\n\t\t\t\t\t}\n\n\t\t\t\t\t&:active {\n\t\t\t\t\t\topacity: 0.8;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.image-indicators {\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\tgap: 8px;\n\t\t\t\tmargin-bottom: 15px;\n\n\t\t\t\t.indicator-dot {\n\t\t\t\t\twidth: 8px;\n\t\t\t\t\theight: 8px;\n\t\t\t\t\tborder-radius: 50%;\n\t\t\t\t\tbackground-color: #ddd;\n\t\t\t\t\tcursor: pointer;\n\n\t\t\t\t\t&.active {\n\t\t\t\t\t\tbackground-color: #4CAF50;\n\t\t\t\t\t\ttransform: scale(1.2);\n\t\t\t\t\t}\n\n\t\t\t\t\t&:active {\n\t\t\t\t\t\topacity: 0.8;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t.switch-image {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\t/* 添加点击反馈 */\n\t\t&:active {\n\t\t\topacity: 0.8;\n\t\t}\n\t}\n\n\t.favorite-btn {\n\t\tposition: fixed;\n\t\ttop: var(--window-top, 0);\n\t\tleft: 10px;\n\t\tz-index: 999;\n\t\tpadding: 4px;\n\t\twidth: 30px;\n\t\theight: 30px;\n\t\tbackground-color: rgba(255, 255, 255, 0.9);\n\t\tborder-radius: 50%;\n\t\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n\t\tmargin-top: 6px;\n\t\ttransition: all 0.3s ease;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\n\t\t.favorite-icon {\n\t\t\tfont-size: 28px;\n\t\t\tcolor: #666;\n\t\t\ttransition: all 0.3s ease;\n\t\t\tdisplay: inline-block;\n\t\t\tline-height: 1;\n\t\t\tmargin-top: -2px;\n\n\t\t\t&.is-favorited {\n\t\t\t\tcolor: #ff5a5f;\n\t\t\t\ttransform: scale(1.15);\n\t\t\t}\n\t\t}\n\n\t\t&:active {\n\t\t\ttransform: scale(0.95);\n\t\t\tbackground-color: rgba(255, 255, 255, 1);\n\t\t}\n\t}\n</style>\n","import MiniProgramPage from 'K:/HBuilderProjects/SWITCH/pages/switchInfo/switchInfo.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","wx","uniCloud","e"],"mappings":"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"}