"use strict";const e=require("../../common/vendor.js"),t={components:{RelatedKeyboardsItem:()=>"../../components/related-keyboards-item.js",RemarkItem:()=>"../../components/remark-item.js"},data:()=>({switchData:{},switchImages:[],triggerCount:0,currentImageIndex:0,isEditing:!1,isLoading:!1,imageTypeOptions:[{text:"详情图",value:"detail"},{text:"上盖图",value:"top"},{text:"轴心图",value:"stem"},{text:"弹簧图",value:"spring"},{text:"底壳图",value:"bottom"},{text:"侧图",value:"side"},{text:"外壳图",value:"housing"},{text:"其他视图",value:"other"}],MAX_WIDTH:1280,MAX_HEIGHT:1280,QUALITY:.8}),computed:{currentImage(){return this.switchImages[this.currentImageIndex]||{}}},onLoad(t){console.log("详情页面加载, 参数:",t),e.index.$on("switchData",this.handleSwitchData),t.id&&(console.log("准备使用 ID 加载数据:",t.id),setTimeout((()=>{this.switchData._id||(console.log("未收到数据，从服务器加载"),this.loadSwitchDataById(t.id))}),200))},onUnload(){e.index.$off("switchData",this.handleSwitchData)},methods:{handleImageLoad(e){console.log("图片加载成功:",e,{fileID:this.switchImages[e].fileID,type:this.switchImages[e].type})},handleSwitchData(t){console.log("接收到轴体数据:",t),console.log("原始 preview_images:",t.preview_images),this.switchData._id!==t._id?(this.switchData=t,Array.isArray(t.preview_images)?(this.switchImages=t.preview_images.map((e=>e&&e.fileID?e:(console.log("发现无效图片数据，使用默认图片:",e),{fileID:"/static/default_switch.webp",type:"detail",fileName:"default_switch.webp",uploadTime:"",updateTime:""}))),console.log("处理后的图片数组:",this.switchImages)):(console.log("preview_images 不是数组:",t.preview_images),this.switchImages=[{fileID:"/static/default_switch.webp",type:"detail",fileName:"default_switch.webp",uploadTime:"",updateTime:""}]),t.switch_name&&e.wx$1.setNavigationBarTitle({title:t.switch_name})):console.log("已有相同数据，跳过更新")},getPriceText:e=>e?`¥${e}`:"暂无报价",getForceText:e=>e?e.toString().toLowerCase().includes("gf")?e:`${e}gf`:"暂无数据",getDistanceText(e){if(!e)return"暂无数据";const t=e.toString().toLowerCase();return t.includes("mm")?e:/\d/.test(t)?`${e}mm`:e},getBeiJingISOString:()=>new Date((new Date).getTime()+288e5).toISOString().slice(0,19).replace("Z",""),formatTime(e){if(!e)return"暂无数据";try{if(e.includes("T"))return e.replace("T"," ").slice(0,19);const t=new Date(e);return new Date(t.getTime()+288e5).toISOString().slice(0,19).replace("Z","")}catch(t){return console.error("时间格式化失败:",t),e}},getRelatedKeyboards:e=>e&&Array.isArray(e)&&0!==e.length?e.join(", "):"--",handleSwiperChange(e){this.currentImageIndex=e.detail.current},async compressImage(t){try{console.log("开始压缩图片:",t);const i=t.split(".").pop().toLowerCase();console.log("图片格式:",i);const a=e.wx$1.getFileSystemManager();if(!t||"string"!=typeof t)throw new Error("无效的文件路径");console.log("准备获取图片信息...");const s=await new Promise(((i,a)=>{e.wx$1.getImageInfo({src:t,success:e=>{console.log("获取图片信息成功:",e),i(e)},fail:e=>{console.error("获取图片信息失败:",e),a(new Error("获取图片信息失败"))}})}));console.log("原始图片信息:",s);const n=await new Promise(((e,i)=>{a.getFileInfo({filePath:t,success:t=>{console.log("获取文件大小成功:",t),e(t)},fail:i})})),o=(n.size/1024).toFixed(2);console.log(`原始图片大小: ${o}KB, 尺寸: ${s.width}x${s.height}`);let r=s.width,h=s.height;const c=1024,l=800,g=50;let d=1;if(r>c||h>c){d=c/Math.max(r,h),console.log("图片需要缩小，缩放比例:",d)}if(r<l&&h<l){d=l/Math.min(r,h),console.log("图片需要放大，缩放比例:",d)}1!==d&&(r=Math.round(r*d),h=Math.round(h*d),console.log("应用缩放后的尺寸:",{width:r,height:h,scale:d})),console.log("计算后的尺寸:",{width:r,height:h});const m=await new Promise(((i,a)=>{e.wx$1.compressImage({src:t,quality:g,compressedWidth:r,compressHeight:h,success:e=>{console.log("压缩图片成功:",e),i(e)},fail:a})})),w=await new Promise(((t,i)=>{e.wx$1.getImageInfo({src:m.tempFilePath,success:t,fail:i})})),I=await new Promise(((e,t)=>{a.getFileInfo({filePath:m.tempFilePath,success:e,fail:t})})),u=(I.size/1024).toFixed(2);return console.log(`压缩完成:\n\t\t\t\t\t\t原始大小: ${o}KB (${s.width}x${s.height})\n\t\t\t\t\t\t压缩后大小: ${u}KB (${w.width}x${w.height})\n\t\t\t\t\t\t压缩率: ${(100*(1-I.size/n.size)).toFixed(2)}%\n\t\t\t\t\t`),m.tempFilePath}catch(i){return console.error("压缩图片失败:",i),t}},getImageFileName(e="detail",t="jpg"){const i=(this.switchData.switch_name_en||this.switchData.switch_name||"unknown").replace(/\s+/g,"_").replace(/[^a-zA-Z0-9_]/g,"").replace(/_+/g,"_").replace(/^_|_$/g,""),a=new Date,s=a.getFullYear()+String(a.getMonth()+1).padStart(2,"0")+String(a.getDate()).padStart(2,"0")+"_"+String(a.getHours()).padStart(2,"0")+String(a.getMinutes()).padStart(2,"0")+String(a.getSeconds()).padStart(2,"0"),n=Math.random().toString(36).substring(2,8);let o="";if("other"===e){o=`other${this.switchImages.filter((e=>"other"===e.type)).length+1}`}else{o={detail:"detail",top:"top",stem:"stem",spring:"spring",bottom:"bottom",side:"side",housing:"housing"}[e]||"other1"}return`${i}_${o}_${s}_${n}.${t}`},getTypeFromFileName(e){if(!e)return"detail";const t={detail:"detail",top:"top",stem:"stem",spring:"spring",bottom:"bottom",side:"side",housing:"housing",other1:"other",other2:"other",other3:"other"};for(const[a,s]of Object.entries(t))if(e.includes(`_${a}_`))return s;const i={_dt_:"detail",_tp_:"top",_st_:"stem",_sp_:"spring",_bt_:"bottom",_sd_:"side",_hs_:"housing",_ot1_:"other",_ot2_:"other",_ot3_:"other"};for(const[a,s]of Object.entries(i))if(e.includes(a))return s;return"detail"},async handleAddImage(){try{const t=(await e.index.chooseImage({count:1,sizeType:["compressed"],sourceType:["album","camera"]})).tempFilePaths[0],i=await this.compressImage(t),a="jpg",s=this.getImageFileName("detail",a),n=s,o=await e.er.uploadFile({filePath:i,cloudPath:n});console.log("文件上传成功:",o);const r={fileID:o.fileID,type:"detail",fileName:s,uploadTime:this.getBeiJingISOString(),updateTime:this.getBeiJingISOString()},{result:h}=await e.er.callFunction({name:"switchApi",data:{action:"updateSwitchImage",switchId:this.switchData._id,imageIndex:this.switchImages.length,imageInfo:r}});if(!h||0!==h.errCode)throw new Error((null==h?void 0:h.errMsg)||"更新失败");this.switchImages.push(r),this.switchData.preview_images=[...this.switchImages],this.currentImageIndex=this.switchImages.length-1,this.$forceUpdate(),e.index.showToast({title:"添加成功",icon:"success"})}catch(t){console.error("添加图片失败:",t),e.index.showToast({title:t.message||"添加失败",icon:"none"})}},async deleteCloudFile(t){if(t&&!t.includes("default_switch.webp"))try{const i=await e.er.callFunction({name:"switchApi",data:{action:"deleteCloudFile",fileList:[t]}});if(0===i.result.errCode)return console.log("文件删除成功:",t,i),!0;throw new Error(i.result.errMsg)}catch(i){return console.error("文件删除失败:",i),!1}},async handleEditConfirm(){try{const t=(await new Promise(((t,i)=>{e.wx$1.chooseImage({count:1,sizeType:["original","compressed"],sourceType:["album","camera"],success:t,fail:e=>{e.errMsg.includes("cancel")?i(new Error("cancel")):i(e)}})}))).tempFilePaths[0];console.log("选择的图片:",t);const i=await this.compressImage(t),a="jpg",s=this.getImageFileName("detail",a),n=s;e.index.showLoading({title:"上传中..."});const o=this.switchImages[this.currentImageIndex].fileID,r=await e.er.uploadFile({filePath:i,cloudPath:n});await this.deleteCloudFile(o);const h={fileID:r.fileID,type:this.switchImages[this.currentImageIndex].type,fileName:s,uploadTime:this.getBeiJingISOString(),updateTime:this.getBeiJingISOString()},{result:c}=await e.er.callFunction({name:"switchApi",data:{action:"updateSwitchImage",switchId:this.switchData._id,imageIndex:this.currentImageIndex,imageInfo:h}});if(!c||0!==c.errCode)throw new Error((null==c?void 0:c.errMsg)||"更新失败");this.$set(this.switchImages,this.currentImageIndex,h),this.switchData.preview_images=this.switchImages,this.$forceUpdate(),e.index.showToast({title:"更换成功"})}catch(t){if("cancel"===t.message)return void console.log("用户取消选择图片");console.error("编辑图片失败:",t),e.index.showToast({title:"编辑图片失败",icon:"none"})}finally{e.index.hideLoading()}},async handleDeleteImage(){try{console.log("开始删除图片操作");const t=this.switchImages[this.currentImageIndex];if(console.log("当前图片信息:",t),!t.fileID)return void e.index.showToast({title:"默认图片不能删除",icon:"none"});if(!(await e.index.showModal({title:"确认删除",content:"确定要删除这张图片吗？",confirmText:"删除",confirmColor:"#f44336"})).confirm)return void console.log("用户取消删除");console.log("准备调用云函数删除图片:",{switchId:this.switchData._id,imageIndex:this.currentImageIndex,fileID:t.fileID});const{result:i}=await e.er.callFunction({name:"switchApi",data:{action:"deleteSwitchImage",switchId:this.switchData._id,imageIndex:this.currentImageIndex,fileID:t.fileID}});if(console.log("云函数返回结果:",i),!i||0!==i.errCode)throw new Error((null==i?void 0:i.errMsg)||"删除失败");const a=[...this.switchImages];a.splice(this.currentImageIndex,1),this.switchImages=a,this.switchData.preview_images=a,this.switchImages.length>0?this.currentImageIndex=Math.min(this.currentImageIndex,this.switchImages.length-1):this.currentImageIndex=0,this.isEditing=!1,e.index.showToast({title:"删除成功",icon:"success"})}catch(t){console.error("删除图片失败:",t),e.index.showToast({title:t.message||"删除失败",icon:"none"})}},handleImageError(e){console.error("图片加载失败:",e,{fileID:this.switchImages[e].fileID,type:this.switchImages[e].type}),this.switchImages[e]&&this.$set(this.switchImages[e],"fileID","/static/default_switch.webp")},startEditing(){this.switchImages.length?this.isEditing=!0:e.index.showToast({title:"暂无图片",icon:"none"})},handleTriggerTap(){this.triggerCount++,this.triggerCount>=5&&(this.triggerCount=0,this.isEditing=!0)},handlePrevImage(){this.switchImages.length<=1||(this.currentImageIndex=(this.currentImageIndex-1+this.switchImages.length)%this.switchImages.length)},handleNextImage(){this.switchImages.length<=1||(this.currentImageIndex=(this.currentImageIndex+1)%this.switchImages.length)},handleIndicatorTap(e){this.currentImageIndex=e},getImageTypeText:e=>({detail:"详情图",top:"上盖图",stem:"轴心图",spring:"弹簧图",bottom:"底壳图",side:"侧图",housing:"外壳图",other:"其他视图"}[e]||e),async handleChangeImageType(){try{const t=[{text:"详情图",value:"detail"},{text:"上盖图",value:"top"},{text:"轴心图",value:"stem"},{text:"弹簧图",value:"spring"},{text:"更多类型...",value:"more"}],i=await new Promise(((i,a)=>{e.index.showActionSheet({itemList:t.map((e=>e.text)),itemColor:"#000000",success:i,fail:e=>{e.errMsg.includes("fail cancel")?i({tapIndex:-1}):a(e)}})}));if(-1===i.tapIndex)return;let a=t[i.tapIndex].value;if("more"===a){const t=[{text:"底壳图",value:"bottom"},{text:"侧图",value:"side"},{text:"外壳图",value:"housing"},{text:"其他视图",value:"other"},{text:"返回上级",value:"back"}],i=await new Promise(((i,a)=>{e.index.showActionSheet({itemList:t.map((e=>e.text)),itemColor:"#000000",success:i,fail:e=>{e.errMsg.includes("fail cancel")?i({tapIndex:-1}):a(e)}})}));if(-1===i.tapIndex||"back"===t[i.tapIndex].value)return void this.handleChangeImageType();a=t[i.tapIndex].value}if("other"===a&&"other"!==this.currentImage.type){if(this.switchImages.filter((e=>"other"===e.type)).length>=3)return void e.index.showToast({title:"其他视图最多只能有3张",icon:"none"})}const s="jpg",n=this.getImageFileName(a,s),o={...this.currentImage,type:a,fileName:n,updateTime:this.getBeiJingISOString()},{result:r}=await e.er.callFunction({name:"switchApi",data:{action:"updateSwitchImage",switchId:this.switchData._id,imageIndex:this.currentImageIndex,imageInfo:o}});if(!r||0!==r.errCode)throw new Error((null==r?void 0:r.errMsg)||"更新失败");this.$set(this.switchImages,this.currentImageIndex,o),this.switchData.preview_images=[...this.switchImages],this.$forceUpdate(),e.index.showToast({title:"类型修改成功",icon:"success"})}catch(t){console.error("修改图片类型失败:",t),e.index.showToast({title:"修改失败",icon:"none"})}},getTypeIndex(e){return this.imageTypeOptions.findIndex((t=>t.value===e))},async handleTypeChange(t){if(!this.currentImage.fileID)return void e.index.showToast({title:"默认图片不能修改类型",icon:"none"});const i=this.imageTypeOptions[t.detail.value].value;if(i!==this.currentImage.type){if("other"===i&&"other"!==this.currentImage.type){if(this.switchImages.filter((e=>"other"===e.type)).length>=3)return void e.index.showToast({title:"其他视图最多只能有3张",icon:"none"})}try{const t="jpg",a=this.getImageFileName(i,t),s={...this.currentImage,type:i,fileName:a,updateTime:this.getBeiJingISOString()},{result:n}=await e.er.callFunction({name:"switchApi",data:{action:"updateSwitchImage",switchId:this.switchData._id,imageIndex:this.currentImageIndex,imageInfo:s}});if(!n||0!==n.errCode)throw new Error((null==n?void 0:n.errMsg)||"更新失败");this.$set(this.switchImages,this.currentImageIndex,s),this.switchData.preview_images=[...this.switchImages],this.$forceUpdate(),e.index.showToast({title:"类型修改成功",icon:"success"})}catch(a){console.error("修改图片类型失败:",a),e.index.showToast({title:"修改失败",icon:"none"})}}},async loadSwitchDataById(t){try{const{result:i}=await e.er.callFunction({name:"switchApi",data:{action:"getSwitchById",id:t}});if(!i||0!==i.errCode||!i.data)throw new Error((null==i?void 0:i.errMsg)||"加载失败");this.handleSwitchData(i.data)}catch(i){console.error("加载数据失败:",i),e.index.showToast({title:"加载失败",icon:"none"})}},async handleImageTap(t){if(!this.isEditing)try{const i=this.switchImages.filter((e=>e.fileID&&"/static/default_switch.webp"!==e.fileID)).map((e=>e.fileID));if(0===i.length)return void e.index.showToast({title:"无可预览图片",icon:"none"});const a=this.switchImages[t].fileID;e.wx$1.previewImage({current:a,urls:i,success:()=>{console.log("预览图片成功")},fail:t=>{console.error("预览图片失败:",t),e.index.showToast({title:"预览失败",icon:"none"})}})}catch(i){console.error("处理图片预览失败:",i),e.index.showToast({title:i.message||"预览失败",icon:"none"})}},async handleSetMainImage(){try{const t=this.currentImageIndex,i=this.switchImages;if(0===t)return void e.index.showToast({title:"已经是主图",icon:"none"});if(!(await e.index.showModal({title:"设为主图",content:"确定要将当前图片设为主图吗？",confirmText:"确定",confirmColor:"#4CAF50"})).confirm)return;const a=i[t],s=[...i];s.splice(t,1),s.unshift({...a,type:"detail",fileName:"main_image.jpg",updateTime:this.getBeiJingISOString()});const{result:n}=await e.er.callFunction({name:"switchApi",data:{action:"updateSwitchImages",switchId:this.switchData._id,images:s}});if(!n||0!==n.errCode)throw new Error((null==n?void 0:n.errMsg)||"设置失败");this.switchImages=s,this.switchData.preview_images=[...this.switchImages],this.currentImageIndex=0,this.$forceUpdate(),e.index.showToast({title:"设置成功",icon:"success"})}catch(t){console.error("设置主图失败:",t),e.index.showToast({title:"设置失败",icon:"none"})}}}};if(!Array){(e.resolveComponent("uni-list-item")+e.resolveComponent("related-keyboards-item")+e.resolveComponent("remark-item")+e.resolveComponent("uni-list"))()}Math||((()=>"../../uni_modules/uni-list/components/uni-list-item/uni-list-item.js")+(()=>"../../uni_modules/uni-list/components/uni-list/uni-list.js"))();const i=e._export_sfc(t,[["render",function(t,i,a,s,n,o){return e.e({a:n.isEditing},n.isEditing?e.e({b:e.t(n.switchImages.length?`(${n.currentImageIndex+1}/${n.switchImages.length})`:""),c:e.o((e=>n.isEditing=!1)),d:o.currentImage.fileID},o.currentImage.fileID?{e:e.t(o.currentImage.type?o.getImageTypeText(o.currentImage.type):"选择类型"),f:n.imageTypeOptions,g:o.getTypeIndex(o.currentImage.type),h:e.o(((...e)=>o.handleTypeChange&&o.handleTypeChange(...e)))}:{},{i:n.switchImages.length>1},n.switchImages.length>1?{j:e.o(((...e)=>o.handlePrevImage&&o.handlePrevImage(...e)))}:{},{k:n.switchImages.length},n.switchImages.length?{l:o.currentImage.fileID||"/static/default_switch.webp"}:{},{m:n.switchImages.length>1},n.switchImages.length>1?{n:e.o(((...e)=>o.handleNextImage&&o.handleNextImage(...e)))}:{},{o:e.o(((...e)=>o.handleAddImage&&o.handleAddImage(...e))),p:n.switchImages.length},n.switchImages.length?{q:e.o(((...e)=>o.handleEditConfirm&&o.handleEditConfirm(...e)))}:{},{r:n.switchImages.length>1&&0!==n.currentImageIndex},n.switchImages.length>1&&0!==n.currentImageIndex?{s:e.o(((...e)=>o.handleSetMainImage&&o.handleSetMainImage(...e)))}:{},{t:n.switchImages.length},n.switchImages.length?{v:e.o(((...e)=>o.handleDeleteImage&&o.handleDeleteImage(...e)))}:{},{w:e.o((e=>n.isEditing=!1)),x:n.switchImages.length>1},n.switchImages.length>1?{y:e.f(n.switchImages,((t,i,a)=>({a:i,b:e.n({active:i===n.currentImageIndex}),c:e.o((e=>o.handleIndicatorTap(i)),i)})))}:{}):{},{z:e.o(((...e)=>o.handleTriggerTap&&o.handleTriggerTap(...e))),A:e.f(n.switchImages,((t,i,a)=>e.e({a:t.fileID?t.fileID:"/static/default_switch.webp",b:e.o((e=>o.handleImageError(i)),i),c:e.o((e=>o.handleImageLoad(i)),i),d:e.o((e=>o.handleImageTap(i)),i),e:t.type},t.type?{f:e.t(o.getImageTypeText(t.type))}:{},{g:i}))),B:!n.isEditing,C:e.o(((...e)=>o.handleSwiperChange&&o.handleSwiperChange(...e))),D:e.p({title:"轴体名称","right-text":n.switchData.switch_name||"暂无"}),E:e.p({title:"代工厂","right-text":n.switchData.manufacturer||"暂无"}),F:e.p({title:"轴体分类","right-text":n.switchData.switch_type||"暂无"}),G:e.p({title:"上市时间","right-text":n.switchData.release_date||"暂无"}),H:e.p({title:"价格","right-text":o.getPriceText(n.switchData.price)}),I:e.p({title:"轴心材质","right-text":n.switchData.stem_material||"暂无"}),J:e.p({title:"上盖材质","right-text":n.switchData.top_housing_material||"暂无"}),K:e.p({title:"底壳材质","right-text":n.switchData.bottom_housing_material||"暂无"}),L:e.p({title:"触发压力","right-text":o.getForceText(n.switchData.actuation_force)}),M:e.p({title:"触发行程","right-text":o.getDistanceText(n.switchData.actuation_travel)}),N:e.p({title:"触底压力","right-text":o.getForceText(n.switchData.bottom_force)}),O:e.p({title:"触底行程","right-text":o.getDistanceText(n.switchData.bottom_out_travel)}),P:e.p({title:"总行程","right-text":o.getDistanceText(n.switchData.total_travel)}),Q:e.p({title:"弹簧长度","right-text":n.switchData.spring_length||"暂无"}),R:e.p({title:"出厂润滑","right-text":n.switchData.factory_lube?"是":"否"}),S:e.p({title:"寿命","right-text":n.switchData.lifespan||"暂无"}),T:e.p({title:"更新时间","right-text":o.formatTime(n.switchData.update_time)}),U:e.p({title:"数据来源","right-text":n.switchData.data_source||"暂无"}),V:e.p({keyboards:o.getRelatedKeyboards(n.switchData.related_keyboards)}),W:e.p({title:"停产","right-text":n.switchData.discontinued?"是":"否"}),X:e.p({remark:n.switchData.remark||"暂无"}),Y:e.p({title:"审核状态","right-text":n.switchData.audit_status||"暂无"})})}]]);wx.createPage(i);
